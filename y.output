Terminals unused in grammar

   EQUAL
   END
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error SEMICOLON declarations
    8             | declaration error declarations
    9             | declaration SEMICOLON error

   10 declaration: ident COLON INTEGER
   11            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | error COLON INTEGER
   14            | ident error INTEGER
   15            | ident COLON error

   16 ident: IDENT
   17      | IDENT COMMA ident

   18 statements: statement SEMICOLON
   19           | statement SEMICOLON statements
   20           | statement SEMICOLON error
   21           | error SEMICOLON statements
   22           | statement error statements

   23 statement: var ASSIGN expressions
   24          | IF bool_expression THEN statements ENDIF
   25          | IF bool_expression THEN statements ELSE statements ENDIF
   26          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   27          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   28          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   29          | READ vars
   30          | READ error
   31          | WRITE vars
   32          | WRITE error
   33          | CONTINUE
   34          | RETURN expressions

   35 bool_expression: relation_and_expression
   36                | relation_and_expression OR relation_and_expression

   37 relation_and_expression: relation_expression
   38                        | relation_expression AND relation_expression

   39 relation_expression: NOT expressions comp expressions
   40                    | NOT TRUE
   41                    | NOT FALSE
   42                    | NOT L_PAREN bool_expression R_PAREN
   43                    | expressions comp expressions
   44                    | TRUE
   45                    | FALSE
   46                    | L_PAREN bool_expression R_PAREN

   47 comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | GTE
   52     | LTE

   53 var: IDENT
   54    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   55    | error L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   56    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   57    | IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET
   58    | IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   59 vars: var
   60     | var COMMA vars
   61     | error COMMA vars
   62     | var COMMA error

   63 expression: multiplicative_expression
   64           | multiplicative_expression PLUS multiplicative_expression
   65           | multiplicative_expression MINUS multiplicative_expression
   66           | error PLUS multiplicative_expression
   67           | multiplicative_expression PLUS error
   68           | error PLUS error
   69           | multiplicative_expression MINUS error

   70 expressions: expression

   71 multiplicative_expression: term
   72                          | term MULT term
   73                          | term DIV term
   74                          | term PER term
   75                          | error MULT term
   76                          | term MULT error
   77                          | error DIV term
   78                          | term DIV error
   79                          | error PER term
   80                          | term PER error
   81                          | error MULT error
   82                          | error DIV error
   83                          | error PER error

   84 term: ident L_PAREN expressions R_PAREN
   85     | var
   86     | NUMBER
   87     | L_PAREN expressions R_PAREN
   88     | MINUS var
   89     | MINUS NUMBER
   90     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256) 7 8 9 13 14 15 20 21 22 30 32 55 57 58 61 62 66 67 68 69
    75 76 77 78 79 80 81 82 83
FUNCTION (258) 4
SEMICOLON (259) 4 6 7 9 18 19 20 21 28
COMMA (260) 17 60 61 62
COLON (261) 10 11 12 13 15
READ (262) 29 30
WRITE (263) 31 32
MULT (264) 72 75 76 81
DIV (265) 73 77 78 82
PLUS (266) 64 66 67 68
MINUS (267) 65 69 88 89 90
EQUAL (268)
PER (269) 74 79 80 83
END (270)
FOR (271) 28
CONTINUE (272) 33
L_SQUARE_BRACKET (273) 11 12 54 55 56 57 58
R_SQUARE_BRACKET (274) 11 12 54 55 56 57 58
L_PAREN (275) 42 46 84 87 90
R_PAREN (276) 42 46 84 87 90
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 26 27 28
ENDLOOP (280) 26 27 28
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 10 11 12 13 14
ARRAY (286) 11 12
OF (287) 11 12
ENDIF (288) 24 25
ELSE (289) 25
IF (290) 24 25
THEN (291) 24 25
WHILE (292) 26 27
DO (293) 27
EQ (294) 47
NEQ (295) 48
LT (296) 49
GT (297) 50
GTE (298) 51
LTE (299) 52
AND (300) 38
OR (301) 36
NOT (302) 39 40 41 42
TRUE (303) 40 44
FALSE (304) 41 45
RETURN (305) 34
ASSIGN (306) 23 28
IDENT (307) 4 16 17 53 54 56 57 58
NUMBER (308) 11 12 28 86 89
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6 7 8 9, on right: 4 6 7 8
declaration (60)
    on left: 10 11 12 13 14 15, on right: 6 8 9
ident (61)
    on left: 16 17, on right: 10 11 12 14 15 17 84
statements (62)
    on left: 18 19 20 21 22, on right: 4 19 21 22 24 25 26 27 28
statement (63)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34, on right: 18 19 20
    22
bool_expression (64)
    on left: 35 36, on right: 24 25 26 27 28 42 46
relation_and_expression (65)
    on left: 37 38, on right: 35 36
relation_expression (66)
    on left: 39 40 41 42 43 44 45 46, on right: 37 38
comp (67)
    on left: 47 48 49 50 51 52, on right: 39 43
var (68)
    on left: 53 54 55 56 57 58, on right: 23 59 60 62 85 88
vars (69)
    on left: 59 60 61 62, on right: 28 29 31 60 61
expression (70)
    on left: 63 64 65 66 67 68 69, on right: 54 55 56 58 70
expressions (71)
    on left: 70, on right: 23 28 34 39 43 84 87 90
multiplicative_expression (72)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83, on right: 63 64
    65 66 67 69
term (73)
    on left: 84 85 86 87 88 89 90, on right: 71 72 73 74 75 76 77 78
    79 80


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    ident         go to state 14


State 10

    7 declarations: error . SEMICOLON declarations
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16


State 11

   16 ident: IDENT .
   17      | IDENT . COMMA ident

    COMMA  shift, and go to state 17

    $default  reduce using rule 16 (ident)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 13

    6 declarations: declaration . SEMICOLON declarations
    8             | declaration . error declarations
    9             | declaration . SEMICOLON error

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 14

   10 declaration: ident . COLON INTEGER
   11            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | ident . error INTEGER
   15            | ident . COLON error

    error  shift, and go to state 21
    COLON  shift, and go to state 22


State 15

    7 declarations: error SEMICOLON . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 13
    ident         go to state 14


State 16

   13 declaration: error COLON . INTEGER

    INTEGER  shift, and go to state 24


State 17

   17 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 11

    ident  go to state 25


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 19

    8 declarations: declaration error . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 27
    declaration   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON . declarations
    9             | declaration SEMICOLON . error

    error  shift, and go to state 28
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 29
    declaration   go to state 13
    ident         go to state 14


State 21

   14 declaration: ident error . INTEGER

    INTEGER  shift, and go to state 30


State 22

   10 declaration: ident COLON . INTEGER
   11            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | ident COLON . error

    error    shift, and go to state 31
    INTEGER  shift, and go to state 32
    ARRAY    shift, and go to state 33


State 23

    7 declarations: error SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 24

   13 declaration: error COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 25

   17 ident: IDENT COMMA ident .

    $default  reduce using rule 17 (ident)


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 34
    declaration   go to state 13
    ident         go to state 14


State 27

    8 declarations: declaration error declarations .

    $default  reduce using rule 8 (declarations)


State 28

    7 declarations: error . SEMICOLON declarations
    9             | declaration SEMICOLON error .
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16

    $default  reduce using rule 9 (declarations)


State 29

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 30

   14 declaration: ident error INTEGER .

    $default  reduce using rule 14 (declaration)


State 31

   15 declaration: ident COLON error .

    $default  reduce using rule 15 (declaration)


State 32

   10 declaration: ident COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 33

   11 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 35


State 34

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 36


State 35

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 37


State 36

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 38


State 37

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 50
    statement   go to state 51
    var         go to state 52


State 39

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 53
    OF                shift, and go to state 54


State 40

   21 statements: error . SEMICOLON statements
   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SEMICOLON         shift, and go to state 55
    L_SQUARE_BRACKET  shift, and go to state 56


State 41

   29 statement: READ . vars
   30          | READ . error

    error  shift, and go to state 57
    IDENT  shift, and go to state 49

    var   go to state 58
    vars  go to state 59


State 42

   31 statement: WRITE . vars
   32          | WRITE . error

    error  shift, and go to state 60
    IDENT  shift, and go to state 49

    var   go to state 58
    vars  go to state 61


State 43

   28 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error  shift, and go to state 62
    IDENT  shift, and go to state 49

    var   go to state 58
    vars  go to state 63


State 44

   33 statement: CONTINUE .

    $default  reduce using rule 33 (statement)


State 45

   24 statement: IF . bool_expression THEN statements ENDIF
   25          | IF . bool_expression THEN statements ELSE statements ENDIF

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    bool_expression            go to state 73
    relation_and_expression    go to state 74
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 78
    multiplicative_expression  go to state 79
    term                       go to state 80


State 46

   26 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    bool_expression            go to state 81
    relation_and_expression    go to state 74
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 78
    multiplicative_expression  go to state 79
    term                       go to state 80


State 47

   27 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 82


State 48

   34 statement: RETURN . expressions

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 84
    multiplicative_expression  go to state 79
    term                       go to state 80


State 49

   53 var: IDENT .
   54    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   56    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   57    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET
   58    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 85

    $default  reduce using rule 53 (var)


State 50

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 86


State 51

   18 statements: statement . SEMICOLON
   19           | statement . SEMICOLON statements
   20           | statement . SEMICOLON error
   22           | statement . error statements

    error      shift, and go to state 87
    SEMICOLON  shift, and go to state 88


State 52

   23 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 89


State 53

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 90


State 54

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 91


State 55

   21 statements: error SEMICOLON . statements

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 92
    statement   go to state 51
    var         go to state 52


State 56

   55 var: error L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 93
    multiplicative_expression  go to state 79
    term                       go to state 80


State 57

   30 statement: READ error .
   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61 vars: error . COMMA vars

    COMMA             shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 30 (statement)


State 58

   59 vars: var .
   60     | var . COMMA vars
   62     | var . COMMA error

    COMMA  shift, and go to state 95

    $default  reduce using rule 59 (vars)


State 59

   29 statement: READ vars .

    $default  reduce using rule 29 (statement)


State 60

   32 statement: WRITE error .
   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61 vars: error . COMMA vars

    COMMA             shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 32 (statement)


State 61

   31 statement: WRITE vars .

    $default  reduce using rule 31 (statement)


State 62

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61 vars: error . COMMA vars

    COMMA             shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 56


State 63

   28 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 96


State 64

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 expression: error . PLUS multiplicative_expression
   68           | error . PLUS error
   75 multiplicative_expression: error . MULT term
   77                          | error . DIV term
   79                          | error . PER term
   81                          | error . MULT error
   82                          | error . DIV error
   83                          | error . PER error

    MULT              shift, and go to state 97
    DIV               shift, and go to state 98
    PLUS              shift, and go to state 99
    PER               shift, and go to state 100
    L_SQUARE_BRACKET  shift, and go to state 56


State 65

   88 term: MINUS . var
   89     | MINUS . NUMBER
   90     | MINUS . L_PAREN expressions R_PAREN

    error    shift, and go to state 101
    L_PAREN  shift, and go to state 102
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 103

    var  go to state 104


State 66

   46 relation_expression: L_PAREN . bool_expression R_PAREN
   87 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    bool_expression            go to state 105
    relation_and_expression    go to state 74
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 106
    multiplicative_expression  go to state 79
    term                       go to state 80


State 67

   39 relation_expression: NOT . expressions comp expressions
   40                    | NOT . TRUE
   41                    | NOT . FALSE
   42                    | NOT . L_PAREN bool_expression R_PAREN

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 107
    TRUE     shift, and go to state 108
    FALSE    shift, and go to state 109
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 110
    multiplicative_expression  go to state 79
    term                       go to state 80


State 68

   44 relation_expression: TRUE .

    $default  reduce using rule 44 (relation_expression)


State 69

   45 relation_expression: FALSE .

    $default  reduce using rule 45 (relation_expression)


State 70

   16 ident: IDENT .
   17      | IDENT . COMMA ident
   53 var: IDENT .
   54    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   56    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   57    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET
   58    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    COMMA             shift, and go to state 17
    L_SQUARE_BRACKET  shift, and go to state 85

    L_PAREN   reduce using rule 16 (ident)
    $default  reduce using rule 53 (var)


State 71

   86 term: NUMBER .

    $default  reduce using rule 86 (term)


State 72

   84 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 111


State 73

   24 statement: IF bool_expression . THEN statements ENDIF
   25          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 112


State 74

   35 bool_expression: relation_and_expression .
   36                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 113

    $default  reduce using rule 35 (bool_expression)


State 75

   37 relation_and_expression: relation_expression .
   38                        | relation_expression . AND relation_expression

    AND  shift, and go to state 114

    $default  reduce using rule 37 (relation_and_expression)


State 76

   85 term: var .

    $default  reduce using rule 85 (term)


State 77

   70 expressions: expression .

    $default  reduce using rule 70 (expressions)


State 78

   43 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 115
    NEQ  shift, and go to state 116
    LT   shift, and go to state 117
    GT   shift, and go to state 118
    GTE  shift, and go to state 119
    LTE  shift, and go to state 120

    comp  go to state 121


State 79

   63 expression: multiplicative_expression .
   64           | multiplicative_expression . PLUS multiplicative_expression
   65           | multiplicative_expression . MINUS multiplicative_expression
   67           | multiplicative_expression . PLUS error
   69           | multiplicative_expression . MINUS error

    PLUS   shift, and go to state 122
    MINUS  shift, and go to state 123

    $default  reduce using rule 63 (expression)


State 80

   71 multiplicative_expression: term .
   72                          | term . MULT term
   73                          | term . DIV term
   74                          | term . PER term
   76                          | term . MULT error
   78                          | term . DIV error
   80                          | term . PER error

    MULT  shift, and go to state 124
    DIV   shift, and go to state 125
    PER   shift, and go to state 126

    $default  reduce using rule 71 (multiplicative_expression)


State 81

   26 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 127


State 82

   27 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 128
    statement   go to state 51
    var         go to state 52


State 83

   87 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 129
    multiplicative_expression  go to state 79
    term                       go to state 80


State 84

   34 statement: RETURN expressions .

    $default  reduce using rule 34 (statement)


State 85

   54 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   56    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   57    | IDENT L_SQUARE_BRACKET . error R_SQUARE_BRACKET
   58    | IDENT L_SQUARE_BRACKET . error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    error    shift, and go to state 130
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 131
    multiplicative_expression  go to state 79
    term                       go to state 80


State 86

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 87

   22 statements: statement error . statements

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 132
    statement   go to state 51
    var         go to state 52


State 88

   18 statements: statement SEMICOLON .
   19           | statement SEMICOLON . statements
   20           | statement SEMICOLON . error

    error     shift, and go to state 133
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    ENDLOOP   reduce using rule 18 (statements)
    END_BODY  reduce using rule 18 (statements)
    ENDIF     reduce using rule 18 (statements)
    ELSE      reduce using rule 18 (statements)

    statements  go to state 134
    statement   go to state 51
    var         go to state 52


State 89

   23 statement: var ASSIGN . expressions

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 135
    multiplicative_expression  go to state 79
    term                       go to state 80


State 90

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 136


State 91

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 92

   21 statements: error SEMICOLON statements .

    $default  reduce using rule 21 (statements)


State 93

   55 var: error L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 137


State 94

   61 vars: error COMMA . vars

    error  shift, and go to state 62
    IDENT  shift, and go to state 49

    var   go to state 58
    vars  go to state 138


State 95

   60 vars: var COMMA . vars
   62     | var COMMA . error

    error  shift, and go to state 139
    IDENT  shift, and go to state 49

    var   go to state 58
    vars  go to state 140


State 96

   28 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 141


State 97

   75 multiplicative_expression: error MULT . term
   81                          | error MULT . error

    error    shift, and go to state 142
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident  go to state 72
    var    go to state 76
    term   go to state 143


State 98

   77 multiplicative_expression: error DIV . term
   82                          | error DIV . error

    error    shift, and go to state 144
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident  go to state 72
    var    go to state 76
    term   go to state 145


State 99

   66 expression: error PLUS . multiplicative_expression
   68           | error PLUS . error

    error    shift, and go to state 146
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    multiplicative_expression  go to state 147
    term                       go to state 80


State 100

   79 multiplicative_expression: error PER . term
   83                          | error PER . error

    error    shift, and go to state 148
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident  go to state 72
    var    go to state 76
    term   go to state 149


State 101

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 56


State 102

   90 term: MINUS L_PAREN . expressions R_PAREN

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 150
    multiplicative_expression  go to state 79
    term                       go to state 80


State 103

   89 term: MINUS NUMBER .

    $default  reduce using rule 89 (term)


State 104

   88 term: MINUS var .

    $default  reduce using rule 88 (term)


State 105

   46 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 151


State 106

   43 relation_expression: expressions . comp expressions
   87 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 152
    EQ       shift, and go to state 115
    NEQ      shift, and go to state 116
    LT       shift, and go to state 117
    GT       shift, and go to state 118
    GTE      shift, and go to state 119
    LTE      shift, and go to state 120

    comp  go to state 121


State 107

   42 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   87 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    bool_expression            go to state 153
    relation_and_expression    go to state 74
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 106
    multiplicative_expression  go to state 79
    term                       go to state 80


State 108

   40 relation_expression: NOT TRUE .

    $default  reduce using rule 40 (relation_expression)


State 109

   41 relation_expression: NOT FALSE .

    $default  reduce using rule 41 (relation_expression)


State 110

   39 relation_expression: NOT expressions . comp expressions

    EQ   shift, and go to state 115
    NEQ  shift, and go to state 116
    LT   shift, and go to state 117
    GT   shift, and go to state 118
    GTE  shift, and go to state 119
    LTE  shift, and go to state 120

    comp  go to state 154


State 111

   84 term: ident L_PAREN . expressions R_PAREN

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 155
    multiplicative_expression  go to state 79
    term                       go to state 80


State 112

   24 statement: IF bool_expression THEN . statements ENDIF
   25          | IF bool_expression THEN . statements ELSE statements ENDIF

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 156
    statement   go to state 51
    var         go to state 52


State 113

   36 bool_expression: relation_and_expression OR . relation_and_expression

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    relation_and_expression    go to state 157
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 78
    multiplicative_expression  go to state 79
    term                       go to state 80


State 114

   38 relation_and_expression: relation_expression AND . relation_expression

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    relation_expression        go to state 158
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 78
    multiplicative_expression  go to state 79
    term                       go to state 80


State 115

   47 comp: EQ .

    $default  reduce using rule 47 (comp)


State 116

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 117

   49 comp: LT .

    $default  reduce using rule 49 (comp)


State 118

   50 comp: GT .

    $default  reduce using rule 50 (comp)


State 119

   51 comp: GTE .

    $default  reduce using rule 51 (comp)


State 120

   52 comp: LTE .

    $default  reduce using rule 52 (comp)


State 121

   43 relation_expression: expressions comp . expressions

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 159
    multiplicative_expression  go to state 79
    term                       go to state 80


State 122

   64 expression: multiplicative_expression PLUS . multiplicative_expression
   67           | multiplicative_expression PLUS . error

    error    shift, and go to state 160
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    multiplicative_expression  go to state 161
    term                       go to state 80


State 123

   65 expression: multiplicative_expression MINUS . multiplicative_expression
   69           | multiplicative_expression MINUS . error

    error    shift, and go to state 162
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    multiplicative_expression  go to state 163
    term                       go to state 80


State 124

   72 multiplicative_expression: term MULT . term
   76                          | term MULT . error

    error    shift, and go to state 164
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident  go to state 72
    var    go to state 76
    term   go to state 165


State 125

   73 multiplicative_expression: term DIV . term
   78                          | term DIV . error

    error    shift, and go to state 166
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident  go to state 72
    var    go to state 76
    term   go to state 167


State 126

   74 multiplicative_expression: term PER . term
   80                          | term PER . error

    error    shift, and go to state 168
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident  go to state 72
    var    go to state 76
    term   go to state 169


State 127

   26 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 170
    statement   go to state 51
    var         go to state 52


State 128

   27 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 171


State 129

   87 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 152


State 130

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   57    | IDENT L_SQUARE_BRACKET error . R_SQUARE_BRACKET
   58    | IDENT L_SQUARE_BRACKET error . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 expression: error . PLUS multiplicative_expression
   68           | error . PLUS error
   75 multiplicative_expression: error . MULT term
   77                          | error . DIV term
   79                          | error . PER term
   81                          | error . MULT error
   82                          | error . DIV error
   83                          | error . PER error

    MULT              shift, and go to state 97
    DIV               shift, and go to state 98
    PLUS              shift, and go to state 99
    PER               shift, and go to state 100
    L_SQUARE_BRACKET  shift, and go to state 56
    R_SQUARE_BRACKET  shift, and go to state 172


State 131

   54 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   56    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 173


State 132

   22 statements: statement error statements .

    $default  reduce using rule 22 (statements)


State 133

   20 statements: statement SEMICOLON error .
   21           | error . SEMICOLON statements
   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SEMICOLON         shift, and go to state 55
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 20 (statements)


State 134

   19 statements: statement SEMICOLON statements .

    $default  reduce using rule 19 (statements)


State 135

   23 statement: var ASSIGN expressions .

    $default  reduce using rule 23 (statement)


State 136

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 174


State 137

   55 var: error L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 55 (var)


State 138

   61 vars: error COMMA vars .

    $default  reduce using rule 61 (vars)


State 139

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61 vars: error . COMMA vars
   62     | var COMMA error .

    COMMA             shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 62 (vars)


State 140

   60 vars: var COMMA vars .

    $default  reduce using rule 60 (vars)


State 141

   28 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 175


State 142

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   81 multiplicative_expression: error MULT error .

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 81 (multiplicative_expression)


State 143

   75 multiplicative_expression: error MULT term .

    $default  reduce using rule 75 (multiplicative_expression)


State 144

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   82 multiplicative_expression: error DIV error .

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 82 (multiplicative_expression)


State 145

   77 multiplicative_expression: error DIV term .

    $default  reduce using rule 77 (multiplicative_expression)


State 146

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68 expression: error PLUS error .
   75 multiplicative_expression: error . MULT term
   77                          | error . DIV term
   79                          | error . PER term
   81                          | error . MULT error
   82                          | error . DIV error
   83                          | error . PER error

    MULT              shift, and go to state 97
    DIV               shift, and go to state 98
    PER               shift, and go to state 100
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 68 (expression)


State 147

   66 expression: error PLUS multiplicative_expression .

    $default  reduce using rule 66 (expression)


State 148

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   83 multiplicative_expression: error PER error .

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 83 (multiplicative_expression)


State 149

   79 multiplicative_expression: error PER term .

    $default  reduce using rule 79 (multiplicative_expression)


State 150

   90 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 176


State 151

   46 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 46 (relation_expression)


State 152

   87 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 87 (term)


State 153

   42 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 177


State 154

   39 relation_expression: NOT expressions comp . expressions

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 178
    multiplicative_expression  go to state 79
    term                       go to state 80


State 155

   84 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 179


State 156

   24 statement: IF bool_expression THEN statements . ENDIF
   25          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 180
    ELSE   shift, and go to state 181


State 157

   36 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 36 (bool_expression)


State 158

   38 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 38 (relation_and_expression)


State 159

   43 relation_expression: expressions comp expressions .

    $default  reduce using rule 43 (relation_expression)


State 160

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   67 expression: multiplicative_expression PLUS error .
   75 multiplicative_expression: error . MULT term
   77                          | error . DIV term
   79                          | error . PER term
   81                          | error . MULT error
   82                          | error . DIV error
   83                          | error . PER error

    MULT              shift, and go to state 97
    DIV               shift, and go to state 98
    PER               shift, and go to state 100
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 67 (expression)


State 161

   64 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 64 (expression)


State 162

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   69 expression: multiplicative_expression MINUS error .
   75 multiplicative_expression: error . MULT term
   77                          | error . DIV term
   79                          | error . PER term
   81                          | error . MULT error
   82                          | error . DIV error
   83                          | error . PER error

    MULT              shift, and go to state 97
    DIV               shift, and go to state 98
    PER               shift, and go to state 100
    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 69 (expression)


State 163

   65 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 65 (expression)


State 164

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   76 multiplicative_expression: term MULT error .

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 76 (multiplicative_expression)


State 165

   72 multiplicative_expression: term MULT term .

    $default  reduce using rule 72 (multiplicative_expression)


State 166

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   78 multiplicative_expression: term DIV error .

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 78 (multiplicative_expression)


State 167

   73 multiplicative_expression: term DIV term .

    $default  reduce using rule 73 (multiplicative_expression)


State 168

   55 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   80 multiplicative_expression: term PER error .

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 80 (multiplicative_expression)


State 169

   74 multiplicative_expression: term PER term .

    $default  reduce using rule 74 (multiplicative_expression)


State 170

   26 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 182


State 171

   27 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 183


State 172

   57 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET .
   58    | IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 184

    $default  reduce using rule 57 (var)


State 173

   54 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   56    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 185

    $default  reduce using rule 54 (var)


State 174

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 186


State 175

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    bool_expression            go to state 187
    relation_and_expression    go to state 74
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 78
    multiplicative_expression  go to state 79
    term                       go to state 80


State 176

   90 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 90 (term)


State 177

   42 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 42 (relation_expression)


State 178

   39 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 39 (relation_expression)


State 179

   84 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 84 (term)


State 180

   24 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 24 (statement)


State 181

   25 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 188
    statement   go to state 51
    var         go to state 52


State 182

   26 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 26 (statement)


State 183

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    bool_expression            go to state 189
    relation_and_expression    go to state 74
    relation_expression        go to state 75
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 78
    multiplicative_expression  go to state 79
    term                       go to state 80


State 184

   58 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 190
    multiplicative_expression  go to state 79
    term                       go to state 80


State 185

   56 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 191
    multiplicative_expression  go to state 79
    term                       go to state 80


State 186

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 187

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 192


State 188

   25 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 193


State 189

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 27 (statement)


State 190

   58 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 194


State 191

   56 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 195


State 192

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error  shift, and go to state 62
    IDENT  shift, and go to state 49

    var   go to state 58
    vars  go to state 196


State 193

   25 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 25 (statement)


State 194

   58 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 58 (var)


State 195

   56 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 56 (var)


State 196

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 197


State 197

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    error    shift, and go to state 64
    MINUS    shift, and go to state 65
    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 70
    NUMBER   shift, and go to state 71

    ident                      go to state 72
    var                        go to state 76
    expression                 go to state 77
    expressions                go to state 198
    multiplicative_expression  go to state 79
    term                       go to state 80


State 198

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 199


State 199

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 200
    statement   go to state 51
    var         go to state 52


State 200

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 201


State 201

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 28 (statement)
