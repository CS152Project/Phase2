Terminals unused in grammar

   EQUAL
   END
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: ident COLON INTEGER
    8            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 ident: IDENT
   11      | IDENT COMMA ident

   12 statements: statement SEMICOLON
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expressions
   15          | IF bool_expression THEN statements ENDIF
   16          | IF bool_expression THEN statements ELSE statements ENDIF
   17          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   19          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expressions

   24 bool_expression: relation_and_expression
   25                | relation_and_expression OR relation_and_expression

   26 relation_and_expression: relation_expression
   27                        | relation_expression AND relation_expression

   28 relation_expression: NOT expressions comp expressions
   29                    | NOT TRUE
   30                    | NOT FALSE
   31                    | NOT L_PAREN bool_expression R_PAREN
   32                    | expressions comp expressions
   33                    | TRUE
   34                    | FALSE
   35                    | L_PAREN bool_expression R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | GTE
   41     | LTE

   42 var: IDENT
   43    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   44    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   45 vars: var
   46     | var COMMA vars

   47 expression: multiplicative_expression
   48           | multiplicative_expression PLUS multiplicative_expression
   49           | multiplicative_expression MINUS multiplicative_expression

   50 expressions: expression

   51 multiplicative_expression: term
   52                          | term MULT term
   53                          | term DIV term
   54                          | term PER term

   55 term: ident L_PAREN expressions R_PAREN
   56     | var
   57     | NUMBER
   58     | L_PAREN expressions R_PAREN
   59     | MINUS var
   60     | MINUS NUMBER
   61     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
SEMICOLON (259) 4 6 12 13 19
COMMA (260) 11 46
COLON (261) 7 8 9
READ (262) 20
WRITE (263) 21
MULT (264) 52
DIV (265) 53
PLUS (266) 48
MINUS (267) 49 59 60 61
EQUAL (268)
PER (269) 54
END (270)
FOR (271) 19
CONTINUE (272) 22
L_SQUARE_BRACKET (273) 8 9 43 44
R_SQUARE_BRACKET (274) 8 9 43 44
L_PAREN (275) 31 35 55 58 61
R_PAREN (276) 31 35 55 58 61
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 17 18 19
ENDLOOP (280) 17 18 19
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 7 8 9
ARRAY (286) 8 9
OF (287) 8 9
ENDIF (288) 15 16
ELSE (289) 16
IF (290) 15 16
THEN (291) 15 16
WHILE (292) 17 18
DO (293) 18
EQ (294) 36
NEQ (295) 37
LT (296) 38
GT (297) 39
GTE (298) 40
LTE (299) 41
AND (300) 27
OR (301) 25
NOT (302) 28 29 30 31
TRUE (303) 29 33
FALSE (304) 30 34
RETURN (305) 23
ASSIGN (306) 14 19
IDENT (307) 4 10 11 42 43 44
NUMBER (308) 8 9 19 57 60
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6, on right: 4 6
declaration (60)
    on left: 7 8 9, on right: 6
ident (61)
    on left: 10 11, on right: 7 8 9 11 55
statements (62)
    on left: 12 13, on right: 4 13 15 16 17 18 19
statement (63)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12 13
bool_expression (64)
    on left: 24 25, on right: 15 16 17 18 19 31 35
relation_and_expression (65)
    on left: 26 27, on right: 24 25
relation_expression (66)
    on left: 28 29 30 31 32 33 34 35, on right: 26 27
comp (67)
    on left: 36 37 38 39 40 41, on right: 28 32
var (68)
    on left: 42 43 44, on right: 14 45 46 56 59
vars (69)
    on left: 45 46, on right: 19 20 21 46
expression (70)
    on left: 47 48 49, on right: 43 44 50
expressions (71)
    on left: 50, on right: 14 19 23 28 32 55 58 61
multiplicative_expression (72)
    on left: 51 52 53 54, on right: 47 48 49
term (73)
    on left: 55 56 57 58 59 60 61, on right: 51 52 53 54


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ident         go to state 13


State 10

   10 ident: IDENT .
   11      | IDENT . COMMA ident

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: ident . COLON INTEGER
    8            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   11 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 10

    ident  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    ident         go to state 13


State 17

    7 declaration: ident COLON . INTEGER
    8            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   11 ident: IDENT COMMA ident .

    $default  reduce using rule 11 (ident)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    ident         go to state 13


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: ident COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 28

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 41
    OF                shift, and go to state 42


State 29

   20 statement: READ . vars

    IDENT  shift, and go to state 37

    var   go to state 43
    vars  go to state 44


State 30

   21 statement: WRITE . vars

    IDENT  shift, and go to state 37

    var   go to state 43
    vars  go to state 45


State 31

   19 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 37

    var   go to state 43
    vars  go to state 46


State 32

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 33

   15 statement: IF . bool_expression THEN statements ENDIF
   16          | IF . bool_expression THEN statements ELSE statements ENDIF

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    bool_expression            go to state 55
    relation_and_expression    go to state 56
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62


State 34

   17 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    bool_expression            go to state 63
    relation_and_expression    go to state 56
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62


State 35

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 64


State 36

   23 statement: RETURN . expressions

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 66
    multiplicative_expression  go to state 61
    term                       go to state 62


State 37

   42 var: IDENT .
   43    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   44    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 42 (var)


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 39

   12 statements: statement . SEMICOLON
   13           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 69


State 40

   14 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 70


State 41

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 71


State 42

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 43

   45 vars: var .
   46     | var . COMMA vars

    COMMA  shift, and go to state 73

    $default  reduce using rule 45 (vars)


State 44

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 45

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 46

   19 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 74


State 47

   59 term: MINUS . var
   60     | MINUS . NUMBER
   61     | MINUS . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 37
    NUMBER   shift, and go to state 76

    var  go to state 77


State 48

   35 relation_expression: L_PAREN . bool_expression R_PAREN
   58 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    bool_expression            go to state 78
    relation_and_expression    go to state 56
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 79
    multiplicative_expression  go to state 61
    term                       go to state 62


State 49

   28 relation_expression: NOT . expressions comp expressions
   29                    | NOT . TRUE
   30                    | NOT . FALSE
   31                    | NOT . L_PAREN bool_expression R_PAREN

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 80
    TRUE     shift, and go to state 81
    FALSE    shift, and go to state 82
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 83
    multiplicative_expression  go to state 61
    term                       go to state 62


State 50

   33 relation_expression: TRUE .

    $default  reduce using rule 33 (relation_expression)


State 51

   34 relation_expression: FALSE .

    $default  reduce using rule 34 (relation_expression)


State 52

   10 ident: IDENT .
   11      | IDENT . COMMA ident
   42 var: IDENT .
   43    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   44    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    COMMA             shift, and go to state 14
    L_SQUARE_BRACKET  shift, and go to state 67

    L_PAREN   reduce using rule 10 (ident)
    $default  reduce using rule 42 (var)


State 53

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


State 54

   55 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 84


State 55

   15 statement: IF bool_expression . THEN statements ENDIF
   16          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 85


State 56

   24 bool_expression: relation_and_expression .
   25                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 86

    $default  reduce using rule 24 (bool_expression)


State 57

   26 relation_and_expression: relation_expression .
   27                        | relation_expression . AND relation_expression

    AND  shift, and go to state 87

    $default  reduce using rule 26 (relation_and_expression)


State 58

   56 term: var .

    $default  reduce using rule 56 (term)


State 59

   50 expressions: expression .

    $default  reduce using rule 50 (expressions)


State 60

   32 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    GTE  shift, and go to state 92
    LTE  shift, and go to state 93

    comp  go to state 94


State 61

   47 expression: multiplicative_expression .
   48           | multiplicative_expression . PLUS multiplicative_expression
   49           | multiplicative_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 95
    MINUS  shift, and go to state 96

    $default  reduce using rule 47 (expression)


State 62

   51 multiplicative_expression: term .
   52                          | term . MULT term
   53                          | term . DIV term
   54                          | term . PER term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    PER   shift, and go to state 99

    $default  reduce using rule 51 (multiplicative_expression)


State 63

   17 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 64

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 101
    statement   go to state 39
    var         go to state 40


State 65

   58 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 102
    multiplicative_expression  go to state 61
    term                       go to state 62


State 66

   23 statement: RETURN expressions .

    $default  reduce using rule 23 (statement)


State 67

   43 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   44    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 103
    multiplicative_expression  go to state 61
    term                       go to state 62


State 68

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 69

   12 statements: statement SEMICOLON .
   13           | statement SEMICOLON . statements

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 12 (statements)

    statements  go to state 104
    statement   go to state 39
    var         go to state 40


State 70

   14 statement: var ASSIGN . expressions

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 105
    multiplicative_expression  go to state 61
    term                       go to state 62


State 71

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 106


State 72

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 73

   46 vars: var COMMA . vars

    IDENT  shift, and go to state 37

    var   go to state 43
    vars  go to state 107


State 74

   19 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 108


State 75

   61 term: MINUS L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 109
    multiplicative_expression  go to state 61
    term                       go to state 62


State 76

   60 term: MINUS NUMBER .

    $default  reduce using rule 60 (term)


State 77

   59 term: MINUS var .

    $default  reduce using rule 59 (term)


State 78

   35 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 110


State 79

   32 relation_expression: expressions . comp expressions
   58 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 111
    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    GTE      shift, and go to state 92
    LTE      shift, and go to state 93

    comp  go to state 94


State 80

   31 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   58 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    bool_expression            go to state 112
    relation_and_expression    go to state 56
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 79
    multiplicative_expression  go to state 61
    term                       go to state 62


State 81

   29 relation_expression: NOT TRUE .

    $default  reduce using rule 29 (relation_expression)


State 82

   30 relation_expression: NOT FALSE .

    $default  reduce using rule 30 (relation_expression)


State 83

   28 relation_expression: NOT expressions . comp expressions

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    GTE  shift, and go to state 92
    LTE  shift, and go to state 93

    comp  go to state 113


State 84

   55 term: ident L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 114
    multiplicative_expression  go to state 61
    term                       go to state 62


State 85

   15 statement: IF bool_expression THEN . statements ENDIF
   16          | IF bool_expression THEN . statements ELSE statements ENDIF

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 115
    statement   go to state 39
    var         go to state 40


State 86

   25 bool_expression: relation_and_expression OR . relation_and_expression

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    relation_and_expression    go to state 116
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62


State 87

   27 relation_and_expression: relation_expression AND . relation_expression

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    relation_expression        go to state 117
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62


State 88

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


State 89

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


State 90

   38 comp: LT .

    $default  reduce using rule 38 (comp)


State 91

   39 comp: GT .

    $default  reduce using rule 39 (comp)


State 92

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 93

   41 comp: LTE .

    $default  reduce using rule 41 (comp)


State 94

   32 relation_expression: expressions comp . expressions

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 118
    multiplicative_expression  go to state 61
    term                       go to state 62


State 95

   48 expression: multiplicative_expression PLUS . multiplicative_expression

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    multiplicative_expression  go to state 119
    term                       go to state 62


State 96

   49 expression: multiplicative_expression MINUS . multiplicative_expression

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    multiplicative_expression  go to state 120
    term                       go to state 62


State 97

   52 multiplicative_expression: term MULT . term

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 54
    var    go to state 58
    term   go to state 121


State 98

   53 multiplicative_expression: term DIV . term

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 54
    var    go to state 58
    term   go to state 122


State 99

   54 multiplicative_expression: term PER . term

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 54
    var    go to state 58
    term   go to state 123


State 100

   17 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 124
    statement   go to state 39
    var         go to state 40


State 101

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 125


State 102

   58 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 111


State 103

   43 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   44    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 126


State 104

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 105

   14 statement: var ASSIGN expressions .

    $default  reduce using rule 14 (statement)


State 106

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 127


State 107

   46 vars: var COMMA vars .

    $default  reduce using rule 46 (vars)


State 108

   19 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 128


State 109

   61 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 110

   35 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 35 (relation_expression)


State 111

   58 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (term)


State 112

   31 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 130


State 113

   28 relation_expression: NOT expressions comp . expressions

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 131
    multiplicative_expression  go to state 61
    term                       go to state 62


State 114

   55 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 132


State 115

   15 statement: IF bool_expression THEN statements . ENDIF
   16          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 133
    ELSE   shift, and go to state 134


State 116

   25 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 25 (bool_expression)


State 117

   27 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 27 (relation_and_expression)


State 118

   32 relation_expression: expressions comp expressions .

    $default  reduce using rule 32 (relation_expression)


State 119

   48 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 48 (expression)


State 120

   49 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 49 (expression)


State 121

   52 multiplicative_expression: term MULT term .

    $default  reduce using rule 52 (multiplicative_expression)


State 122

   53 multiplicative_expression: term DIV term .

    $default  reduce using rule 53 (multiplicative_expression)


State 123

   54 multiplicative_expression: term PER term .

    $default  reduce using rule 54 (multiplicative_expression)


State 124

   17 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 125

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 136


State 126

   43 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   44    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 137

    $default  reduce using rule 43 (var)


State 127

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 138


State 128

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    bool_expression            go to state 139
    relation_and_expression    go to state 56
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62


State 129

   61 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 61 (term)


State 130

   31 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 31 (relation_expression)


State 131

   28 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 28 (relation_expression)


State 132

   55 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 55 (term)


State 133

   15 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 134

   16 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 140
    statement   go to state 39
    var         go to state 40


State 135

   17 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 136

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    bool_expression            go to state 141
    relation_and_expression    go to state 56
    relation_expression        go to state 57
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62


State 137

   44 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 142
    multiplicative_expression  go to state 61
    term                       go to state 62


State 138

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 139

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 143


State 140

   16 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 144


State 141

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 18 (statement)


State 142

   44 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 145


State 143

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 37

    var   go to state 43
    vars  go to state 146


State 144

   16 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)


State 145

   44 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 44 (var)


State 146

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 147


State 147

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 47
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                      go to state 54
    var                        go to state 58
    expression                 go to state 59
    expressions                go to state 148
    multiplicative_expression  go to state 61
    term                       go to state 62


State 148

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 149


State 149

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statements  go to state 150
    statement   go to state 39
    var         go to state 40


State 150

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 151

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)
