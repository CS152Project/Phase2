Terminals unused in grammar

   EQUAL
   END
   FOR
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: ident COLON INTEGER
    8            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 ident: IDENT
   11      | IDENT COMMA ident

   12 statements: statement SEMICOLON
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expressions
   15          | IF bool_expression THEN statements SEMICOLON ENDIF
   16          | IF bool_expression THEN ELSE statements SEMICOLON ENDIF
   17          | WHILE bool_expression BEGINLOOP statements SEMICOLON ENDLOOP
   18          | DO BEGINLOOP statements SEMICOLON ENDLOOP WHILE bool_expression
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expressions

   23 bool_expression: relation_and_expression
   24                | relation_and_expression OR relation_and_expression

   25 relation_and_expression: relation_expression
   26                        | relation_expression AND relation_expression

   27 relation_expression: NOT expressions comp expressions
   28                    | NOT TRUE
   29                    | NOT FALSE
   30                    | NOT L_PAREN bool_expression R_PAREN
   31                    | expressions comp expressions
   32                    | TRUE
   33                    | FALSE
   34                    | L_PAREN bool_expression R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | GTE
   40     | LTE

   41 var: ident SEMICOLON
   42    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   43    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   44 vars: var
   45     | vars COMMA var

   46 expression: multiplicative_expressions

   47 expressions: COMMA expression

   48 multiplicative_expression: terms

   49 multiplicative_expressions: PLUS multiplicative_expression
   50                           | MINUS multiplicative_expression

   51 term: ident L_PAREN expressions R_PAREN
   52     | var
   53     | NUMBER
   54     | L_PAREN expressions R_PAREN

   55 terms: MULT term
   56      | DIV term
   57      | PER term
   58      | MINUS term


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
SEMICOLON (259) 4 6 12 13 15 16 17 18 41
COMMA (260) 11 45 47
COLON (261) 7 8 9
READ (262) 19
WRITE (263) 20
MULT (264) 55
DIV (265) 56
PLUS (266) 49
MINUS (267) 50 58
EQUAL (268)
PER (269) 57
END (270)
FOR (271)
CONTINUE (272) 21
L_SQUARE_BRACKET (273) 8 9 42 43
R_SQUARE_BRACKET (274) 8 9 42 43
L_PAREN (275) 30 34 51 54
R_PAREN (276) 30 34 51 54
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 17 18
ENDLOOP (280) 17 18
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 7 8 9
ARRAY (286) 8 9
OF (287) 8 9
ENDIF (288) 15 16
ELSE (289) 16
IF (290) 15 16
THEN (291) 15 16
WHILE (292) 17 18
DO (293) 18
EQ (294) 35
NEQ (295) 36
LT (296) 37
GT (297) 38
GTE (298) 39
LTE (299) 40
AND (300) 26
OR (301) 24
NOT (302) 27 28 29 30
TRUE (303) 28 32
FALSE (304) 29 33
RETURN (305) 22
ASSIGN (306) 14
IDENT (307) 4 10 11
NUMBER (308) 8 9 53
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6, on right: 4 6
declaration (60)
    on left: 7 8 9, on right: 6
ident (61)
    on left: 10 11, on right: 7 8 9 11 41 42 43 51
statements (62)
    on left: 12 13, on right: 4 13 15 16 17 18
statement (63)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
bool_expression (64)
    on left: 23 24, on right: 15 16 17 18 30 34
relation_and_expression (65)
    on left: 25 26, on right: 23 24
relation_expression (66)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
comp (67)
    on left: 35 36 37 38 39 40, on right: 27 31
var (68)
    on left: 41 42 43, on right: 14 44 45 52
vars (69)
    on left: 44 45, on right: 19 20 45
expression (70)
    on left: 46, on right: 42 43 47
expressions (71)
    on left: 47, on right: 14 22 27 31 51 54
multiplicative_expression (72)
    on left: 48, on right: 49 50
multiplicative_expressions (73)
    on left: 49 50, on right: 46
term (74)
    on left: 51 52 53 54, on right: 55 56 57 58
terms (75)
    on left: 55 56 57 58, on right: 48


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ident         go to state 13


State 10

   10 ident: IDENT .
   11      | IDENT . COMMA ident

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: ident . COLON INTEGER
    8            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   11 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 10

    ident  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    ident         go to state 13


State 17

    7 declaration: ident COLON . INTEGER
    8            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   11 ident: IDENT COMMA ident .

    $default  reduce using rule 11 (ident)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    ident         go to state 13


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: ident COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 10

    ident       go to state 36
    statements  go to state 37
    statement   go to state 38
    var         go to state 39


State 28

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
    9            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 40
    OF                shift, and go to state 41


State 29

   19 statement: READ . vars

    IDENT  shift, and go to state 10

    ident  go to state 36
    var    go to state 42
    vars   go to state 43


State 30

   20 statement: WRITE . vars

    IDENT  shift, and go to state 10

    ident  go to state 36
    var    go to state 42
    vars   go to state 44


State 31

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 32

   15 statement: IF . bool_expression THEN statements SEMICOLON ENDIF
   16          | IF . bool_expression THEN ELSE statements SEMICOLON ENDIF

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    bool_expression          go to state 50
    relation_and_expression  go to state 51
    relation_expression      go to state 52
    expressions              go to state 53


State 33

   17 statement: WHILE . bool_expression BEGINLOOP statements SEMICOLON ENDLOOP

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    bool_expression          go to state 54
    relation_and_expression  go to state 51
    relation_expression      go to state 52
    expressions              go to state 53


State 34

   18 statement: DO . BEGINLOOP statements SEMICOLON ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 55


State 35

   22 statement: RETURN . expressions

    COMMA  shift, and go to state 45

    expressions  go to state 56


State 36

   41 var: ident . SEMICOLON
   42    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   43    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SEMICOLON         shift, and go to state 57
    L_SQUARE_BRACKET  shift, and go to state 58


State 37

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 59


State 38

   12 statements: statement . SEMICOLON
   13           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 60


State 39

   14 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 61


State 40

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 62


State 41

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 63


State 42

   44 vars: var .

    $default  reduce using rule 44 (vars)


State 43

   19 statement: READ vars .
   45 vars: vars . COMMA var

    COMMA  shift, and go to state 64

    $default  reduce using rule 19 (statement)


State 44

   20 statement: WRITE vars .
   45 vars: vars . COMMA var

    COMMA  shift, and go to state 64

    $default  reduce using rule 20 (statement)


State 45

   47 expressions: COMMA . expression

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    expression                  go to state 67
    multiplicative_expressions  go to state 68


State 46

   34 relation_expression: L_PAREN . bool_expression R_PAREN

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    bool_expression          go to state 69
    relation_and_expression  go to state 51
    relation_expression      go to state 52
    expressions              go to state 53


State 47

   27 relation_expression: NOT . expressions comp expressions
   28                    | NOT . TRUE
   29                    | NOT . FALSE
   30                    | NOT . L_PAREN bool_expression R_PAREN

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 70
    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72

    expressions  go to state 73


State 48

   32 relation_expression: TRUE .

    $default  reduce using rule 32 (relation_expression)


State 49

   33 relation_expression: FALSE .

    $default  reduce using rule 33 (relation_expression)


State 50

   15 statement: IF bool_expression . THEN statements SEMICOLON ENDIF
   16          | IF bool_expression . THEN ELSE statements SEMICOLON ENDIF

    THEN  shift, and go to state 74


State 51

   23 bool_expression: relation_and_expression .
   24                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 75

    $default  reduce using rule 23 (bool_expression)


State 52

   25 relation_and_expression: relation_expression .
   26                        | relation_expression . AND relation_expression

    AND  shift, and go to state 76

    $default  reduce using rule 25 (relation_and_expression)


State 53

   31 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    LT   shift, and go to state 79
    GT   shift, and go to state 80
    GTE  shift, and go to state 81
    LTE  shift, and go to state 82

    comp  go to state 83


State 54

   17 statement: WHILE bool_expression . BEGINLOOP statements SEMICOLON ENDLOOP

    BEGINLOOP  shift, and go to state 84


State 55

   18 statement: DO BEGINLOOP . statements SEMICOLON ENDLOOP WHILE bool_expression

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 10

    ident       go to state 36
    statements  go to state 85
    statement   go to state 38
    var         go to state 39


State 56

   22 statement: RETURN expressions .

    $default  reduce using rule 22 (statement)


State 57

   41 var: ident SEMICOLON .

    $default  reduce using rule 41 (var)


State 58

   42 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   43    | ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    expression                  go to state 86
    multiplicative_expressions  go to state 68


State 59

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 60

   12 statements: statement SEMICOLON .
   13           | statement SEMICOLON . statements

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 36
    statements  go to state 87
    statement   go to state 38
    var         go to state 39


State 61

   14 statement: var ASSIGN . expressions

    COMMA  shift, and go to state 45

    expressions  go to state 88


State 62

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 89


State 63

    8 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 64

   45 vars: vars COMMA . var

    IDENT  shift, and go to state 10

    ident  go to state 36
    var    go to state 90


State 65

   49 multiplicative_expressions: PLUS . multiplicative_expression

    MULT   shift, and go to state 91
    DIV    shift, and go to state 92
    MINUS  shift, and go to state 93
    PER    shift, and go to state 94

    multiplicative_expression  go to state 95
    terms                      go to state 96


State 66

   50 multiplicative_expressions: MINUS . multiplicative_expression

    MULT   shift, and go to state 91
    DIV    shift, and go to state 92
    MINUS  shift, and go to state 93
    PER    shift, and go to state 94

    multiplicative_expression  go to state 97
    terms                      go to state 96


State 67

   47 expressions: COMMA expression .

    $default  reduce using rule 47 (expressions)


State 68

   46 expression: multiplicative_expressions .

    $default  reduce using rule 46 (expression)


State 69

   34 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 98


State 70

   30 relation_expression: NOT L_PAREN . bool_expression R_PAREN

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    bool_expression          go to state 99
    relation_and_expression  go to state 51
    relation_expression      go to state 52
    expressions              go to state 53


State 71

   28 relation_expression: NOT TRUE .

    $default  reduce using rule 28 (relation_expression)


State 72

   29 relation_expression: NOT FALSE .

    $default  reduce using rule 29 (relation_expression)


State 73

   27 relation_expression: NOT expressions . comp expressions

    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    LT   shift, and go to state 79
    GT   shift, and go to state 80
    GTE  shift, and go to state 81
    LTE  shift, and go to state 82

    comp  go to state 100


State 74

   15 statement: IF bool_expression THEN . statements SEMICOLON ENDIF
   16          | IF bool_expression THEN . ELSE statements SEMICOLON ENDIF

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    ELSE      shift, and go to state 101
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 10

    ident       go to state 36
    statements  go to state 102
    statement   go to state 38
    var         go to state 39


State 75

   24 bool_expression: relation_and_expression OR . relation_and_expression

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    relation_and_expression  go to state 103
    relation_expression      go to state 52
    expressions              go to state 53


State 76

   26 relation_and_expression: relation_expression AND . relation_expression

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    relation_expression  go to state 104
    expressions          go to state 53


State 77

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 78

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 79

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 80

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 81

   39 comp: GTE .

    $default  reduce using rule 39 (comp)


State 82

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


State 83

   31 relation_expression: expressions comp . expressions

    COMMA  shift, and go to state 45

    expressions  go to state 105


State 84

   17 statement: WHILE bool_expression BEGINLOOP . statements SEMICOLON ENDLOOP

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 10

    ident       go to state 36
    statements  go to state 106
    statement   go to state 38
    var         go to state 39


State 85

   18 statement: DO BEGINLOOP statements . SEMICOLON ENDLOOP WHILE bool_expression

    SEMICOLON  shift, and go to state 107


State 86

   42 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   43    | ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 108


State 87

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 88

   14 statement: var ASSIGN expressions .

    $default  reduce using rule 14 (statement)


State 89

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 109


State 90

   45 vars: vars COMMA var .

    $default  reduce using rule 45 (vars)


State 91

   55 terms: MULT . term

    L_PAREN  shift, and go to state 110
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 111

    ident  go to state 112
    var    go to state 113
    term   go to state 114


State 92

   56 terms: DIV . term

    L_PAREN  shift, and go to state 110
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 111

    ident  go to state 112
    var    go to state 113
    term   go to state 115


State 93

   58 terms: MINUS . term

    L_PAREN  shift, and go to state 110
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 111

    ident  go to state 112
    var    go to state 113
    term   go to state 116


State 94

   57 terms: PER . term

    L_PAREN  shift, and go to state 110
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 111

    ident  go to state 112
    var    go to state 113
    term   go to state 117


State 95

   49 multiplicative_expressions: PLUS multiplicative_expression .

    $default  reduce using rule 49 (multiplicative_expressions)


State 96

   48 multiplicative_expression: terms .

    $default  reduce using rule 48 (multiplicative_expression)


State 97

   50 multiplicative_expressions: MINUS multiplicative_expression .

    $default  reduce using rule 50 (multiplicative_expressions)


State 98

   34 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 34 (relation_expression)


State 99

   30 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 118


State 100

   27 relation_expression: NOT expressions comp . expressions

    COMMA  shift, and go to state 45

    expressions  go to state 119


State 101

   16 statement: IF bool_expression THEN ELSE . statements SEMICOLON ENDIF

    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 10

    ident       go to state 36
    statements  go to state 120
    statement   go to state 38
    var         go to state 39


State 102

   15 statement: IF bool_expression THEN statements . SEMICOLON ENDIF

    SEMICOLON  shift, and go to state 121


State 103

   24 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 24 (bool_expression)


State 104

   26 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 26 (relation_and_expression)


State 105

   31 relation_expression: expressions comp expressions .

    $default  reduce using rule 31 (relation_expression)


State 106

   17 statement: WHILE bool_expression BEGINLOOP statements . SEMICOLON ENDLOOP

    SEMICOLON  shift, and go to state 122


State 107

   18 statement: DO BEGINLOOP statements SEMICOLON . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 123


State 108

   42 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   43    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 124

    $default  reduce using rule 42 (var)


State 109

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 125


State 110

   54 term: L_PAREN . expressions R_PAREN

    COMMA  shift, and go to state 45

    expressions  go to state 126


State 111

   53 term: NUMBER .

    $default  reduce using rule 53 (term)


State 112

   41 var: ident . SEMICOLON
   42    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   43    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51 term: ident . L_PAREN expressions R_PAREN

    SEMICOLON         shift, and go to state 57
    L_SQUARE_BRACKET  shift, and go to state 58
    L_PAREN           shift, and go to state 127


State 113

   52 term: var .

    $default  reduce using rule 52 (term)


State 114

   55 terms: MULT term .

    $default  reduce using rule 55 (terms)


State 115

   56 terms: DIV term .

    $default  reduce using rule 56 (terms)


State 116

   58 terms: MINUS term .

    $default  reduce using rule 58 (terms)


State 117

   57 terms: PER term .

    $default  reduce using rule 57 (terms)


State 118

   30 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 30 (relation_expression)


State 119

   27 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 27 (relation_expression)


State 120

   16 statement: IF bool_expression THEN ELSE statements . SEMICOLON ENDIF

    SEMICOLON  shift, and go to state 128


State 121

   15 statement: IF bool_expression THEN statements SEMICOLON . ENDIF

    ENDIF  shift, and go to state 129


State 122

   17 statement: WHILE bool_expression BEGINLOOP statements SEMICOLON . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 123

   18 statement: DO BEGINLOOP statements SEMICOLON ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 131


State 124

   43 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66

    expression                  go to state 132
    multiplicative_expressions  go to state 68


State 125

    9 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 126

   54 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 133


State 127

   51 term: ident L_PAREN . expressions R_PAREN

    COMMA  shift, and go to state 45

    expressions  go to state 134


State 128

   16 statement: IF bool_expression THEN ELSE statements SEMICOLON . ENDIF

    ENDIF  shift, and go to state 135


State 129

   15 statement: IF bool_expression THEN statements SEMICOLON ENDIF .

    $default  reduce using rule 15 (statement)


State 130

   17 statement: WHILE bool_expression BEGINLOOP statements SEMICOLON ENDLOOP .

    $default  reduce using rule 17 (statement)


State 131

   18 statement: DO BEGINLOOP statements SEMICOLON ENDLOOP WHILE . bool_expression

    COMMA    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49

    bool_expression          go to state 136
    relation_and_expression  go to state 51
    relation_expression      go to state 52
    expressions              go to state 53


State 132

   43 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 137


State 133

   54 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 54 (term)


State 134

   51 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 138


State 135

   16 statement: IF bool_expression THEN ELSE statements SEMICOLON ENDIF .

    $default  reduce using rule 16 (statement)


State 136

   18 statement: DO BEGINLOOP statements SEMICOLON ENDLOOP WHILE bool_expression .

    $default  reduce using rule 18 (statement)


State 137

   43 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 43 (var)


State 138

   51 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 51 (term)
