Terminals unused in grammar

   EQUAL
   END
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error SEMICOLON declarations
    8             | declaration error declarations
    9             | declaration SEMICOLON error

   10 declaration: ident COLON INTEGER
   11            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | error COLON INTEGER
   14            | ident error INTEGER
   15            | ident COLON error

   16 ident: IDENT
   17      | IDENT COMMA ident

   18 statements: statement SEMICOLON
   19           | statement SEMICOLON statements
   20           | error SEMICOLON statements

   21 statement: var ASSIGN expressions
   22          | IF bool_expression THEN statements ENDIF
   23          | IF bool_expression THEN statements ELSE statements ENDIF
   24          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   25          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   26          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   27          | READ vars
   28          | WRITE vars
   29          | CONTINUE
   30          | RETURN expressions

   31 bool_expression: relation_and_expression
   32                | relation_and_expression OR relation_and_expression

   33 relation_and_expression: relation_expression
   34                        | relation_expression AND relation_expression

   35 relation_expression: NOT expressions comp expressions
   36                    | NOT TRUE
   37                    | NOT FALSE
   38                    | NOT L_PAREN bool_expression R_PAREN
   39                    | expressions comp expressions
   40                    | TRUE
   41                    | FALSE
   42                    | L_PAREN bool_expression R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | GTE
   48     | LTE

   49 var: IDENT
   50    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   52 vars: var
   53     | var COMMA vars

   54 expression: multiplicative_expression
   55           | multiplicative_expression PLUS multiplicative_expression
   56           | multiplicative_expression MINUS multiplicative_expression

   57 expressions: expression

   58 multiplicative_expression: term
   59                          | term MULT term
   60                          | term DIV term
   61                          | term PER term

   62 term: ident L_PAREN expressions R_PAREN
   63     | var
   64     | NUMBER
   65     | L_PAREN expressions R_PAREN
   66     | MINUS var
   67     | MINUS NUMBER
   68     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256) 7 8 9 13 14 15 20
FUNCTION (258) 4
SEMICOLON (259) 4 6 7 9 18 19 20 26
COMMA (260) 17 53
COLON (261) 10 11 12 13 15
READ (262) 27
WRITE (263) 28
MULT (264) 59
DIV (265) 60
PLUS (266) 55
MINUS (267) 56 66 67 68
EQUAL (268)
PER (269) 61
END (270)
FOR (271) 26
CONTINUE (272) 29
L_SQUARE_BRACKET (273) 11 12 50 51
R_SQUARE_BRACKET (274) 11 12 50 51
L_PAREN (275) 38 42 62 65 68
R_PAREN (276) 38 42 62 65 68
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 24 25 26
ENDLOOP (280) 24 25 26
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 10 11 12 13 14
ARRAY (286) 11 12
OF (287) 11 12
ENDIF (288) 22 23
ELSE (289) 23
IF (290) 22 23
THEN (291) 22 23
WHILE (292) 24 25
DO (293) 25
EQ (294) 43
NEQ (295) 44
LT (296) 45
GT (297) 46
GTE (298) 47
LTE (299) 48
AND (300) 34
OR (301) 32
NOT (302) 35 36 37 38
TRUE (303) 36 40
FALSE (304) 37 41
RETURN (305) 30
ASSIGN (306) 21 26
IDENT (307) 4 16 17 49 50 51
NUMBER (308) 11 12 26 64 67
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6 7 8 9, on right: 4 6 7 8
declaration (60)
    on left: 10 11 12 13 14 15, on right: 6 8 9
ident (61)
    on left: 16 17, on right: 10 11 12 14 15 17 62
statements (62)
    on left: 18 19 20, on right: 4 19 20 22 23 24 25 26
statement (63)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 18 19
bool_expression (64)
    on left: 31 32, on right: 22 23 24 25 26 38 42
relation_and_expression (65)
    on left: 33 34, on right: 31 32
relation_expression (66)
    on left: 35 36 37 38 39 40 41 42, on right: 33 34
comp (67)
    on left: 43 44 45 46 47 48, on right: 35 39
var (68)
    on left: 49 50 51, on right: 21 52 53 63 66
vars (69)
    on left: 52 53, on right: 26 27 28 53
expression (70)
    on left: 54 55 56, on right: 50 51 57
expressions (71)
    on left: 57, on right: 21 26 30 35 39 62 65 68
multiplicative_expression (72)
    on left: 58 59 60 61, on right: 54 55 56
term (73)
    on left: 62 63 64 65 66 67 68, on right: 58 59 60 61


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    ident         go to state 14


State 10

    7 declarations: error . SEMICOLON declarations
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16


State 11

   16 ident: IDENT .
   17      | IDENT . COMMA ident

    COMMA  shift, and go to state 17

    $default  reduce using rule 16 (ident)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 13

    6 declarations: declaration . SEMICOLON declarations
    8             | declaration . error declarations
    9             | declaration . SEMICOLON error

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 14

   10 declaration: ident . COLON INTEGER
   11            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | ident . error INTEGER
   15            | ident . COLON error

    error  shift, and go to state 21
    COLON  shift, and go to state 22


State 15

    7 declarations: error SEMICOLON . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 13
    ident         go to state 14


State 16

   13 declaration: error COLON . INTEGER

    INTEGER  shift, and go to state 24


State 17

   17 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 11

    ident  go to state 25


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 19

    8 declarations: declaration error . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 27
    declaration   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON . declarations
    9             | declaration SEMICOLON . error

    error  shift, and go to state 28
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 29
    declaration   go to state 13
    ident         go to state 14


State 21

   14 declaration: ident error . INTEGER

    INTEGER  shift, and go to state 30


State 22

   10 declaration: ident COLON . INTEGER
   11            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | ident COLON . error

    error    shift, and go to state 31
    INTEGER  shift, and go to state 32
    ARRAY    shift, and go to state 33


State 23

    7 declarations: error SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 24

   13 declaration: error COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 25

   17 ident: IDENT COMMA ident .

    $default  reduce using rule 17 (ident)


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 34
    declaration   go to state 13
    ident         go to state 14


State 27

    8 declarations: declaration error declarations .

    $default  reduce using rule 8 (declarations)


State 28

    7 declarations: error . SEMICOLON declarations
    9             | declaration SEMICOLON error .
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16

    $default  reduce using rule 9 (declarations)


State 29

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 30

   14 declaration: ident error INTEGER .

    $default  reduce using rule 14 (declaration)


State 31

   15 declaration: ident COLON error .

    $default  reduce using rule 15 (declaration)


State 32

   10 declaration: ident COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 33

   11 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 35


State 34

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 36


State 35

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 37


State 36

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 38


State 37

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 50
    statement   go to state 51
    var         go to state 52


State 39

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 53
    OF                shift, and go to state 54


State 40

   20 statements: error . SEMICOLON statements

    SEMICOLON  shift, and go to state 55


State 41

   27 statement: READ . vars

    IDENT  shift, and go to state 49

    var   go to state 56
    vars  go to state 57


State 42

   28 statement: WRITE . vars

    IDENT  shift, and go to state 49

    var   go to state 56
    vars  go to state 58


State 43

   26 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 49

    var   go to state 56
    vars  go to state 59


State 44

   29 statement: CONTINUE .

    $default  reduce using rule 29 (statement)


State 45

   22 statement: IF . bool_expression THEN statements ENDIF
   23          | IF . bool_expression THEN statements ELSE statements ENDIF

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    bool_expression            go to state 68
    relation_and_expression    go to state 69
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 73
    multiplicative_expression  go to state 74
    term                       go to state 75


State 46

   24 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    bool_expression            go to state 76
    relation_and_expression    go to state 69
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 73
    multiplicative_expression  go to state 74
    term                       go to state 75


State 47

   25 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 77


State 48

   30 statement: RETURN . expressions

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 79
    multiplicative_expression  go to state 74
    term                       go to state 75


State 49

   49 var: IDENT .
   50    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 80

    $default  reduce using rule 49 (var)


State 50

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 81


State 51

   18 statements: statement . SEMICOLON
   19           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 82


State 52

   21 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 83


State 53

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 84


State 54

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 85


State 55

   20 statements: error SEMICOLON . statements

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 86
    statement   go to state 51
    var         go to state 52


State 56

   52 vars: var .
   53     | var . COMMA vars

    COMMA  shift, and go to state 87

    $default  reduce using rule 52 (vars)


State 57

   27 statement: READ vars .

    $default  reduce using rule 27 (statement)


State 58

   28 statement: WRITE vars .

    $default  reduce using rule 28 (statement)


State 59

   26 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 88


State 60

   66 term: MINUS . var
   67     | MINUS . NUMBER
   68     | MINUS . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 89
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 90

    var  go to state 91


State 61

   42 relation_expression: L_PAREN . bool_expression R_PAREN
   65 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    bool_expression            go to state 92
    relation_and_expression    go to state 69
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 93
    multiplicative_expression  go to state 74
    term                       go to state 75


State 62

   35 relation_expression: NOT . expressions comp expressions
   36                    | NOT . TRUE
   37                    | NOT . FALSE
   38                    | NOT . L_PAREN bool_expression R_PAREN

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 94
    TRUE     shift, and go to state 95
    FALSE    shift, and go to state 96
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 97
    multiplicative_expression  go to state 74
    term                       go to state 75


State 63

   40 relation_expression: TRUE .

    $default  reduce using rule 40 (relation_expression)


State 64

   41 relation_expression: FALSE .

    $default  reduce using rule 41 (relation_expression)


State 65

   16 ident: IDENT .
   17      | IDENT . COMMA ident
   49 var: IDENT .
   50    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    COMMA             shift, and go to state 17
    L_SQUARE_BRACKET  shift, and go to state 80

    L_PAREN   reduce using rule 16 (ident)
    $default  reduce using rule 49 (var)


State 66

   64 term: NUMBER .

    $default  reduce using rule 64 (term)


State 67

   62 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 98


State 68

   22 statement: IF bool_expression . THEN statements ENDIF
   23          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 99


State 69

   31 bool_expression: relation_and_expression .
   32                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 100

    $default  reduce using rule 31 (bool_expression)


State 70

   33 relation_and_expression: relation_expression .
   34                        | relation_expression . AND relation_expression

    AND  shift, and go to state 101

    $default  reduce using rule 33 (relation_and_expression)


State 71

   63 term: var .

    $default  reduce using rule 63 (term)


State 72

   57 expressions: expression .

    $default  reduce using rule 57 (expressions)


State 73

   39 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    LT   shift, and go to state 104
    GT   shift, and go to state 105
    GTE  shift, and go to state 106
    LTE  shift, and go to state 107

    comp  go to state 108


State 74

   54 expression: multiplicative_expression .
   55           | multiplicative_expression . PLUS multiplicative_expression
   56           | multiplicative_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110

    $default  reduce using rule 54 (expression)


State 75

   58 multiplicative_expression: term .
   59                          | term . MULT term
   60                          | term . DIV term
   61                          | term . PER term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112
    PER   shift, and go to state 113

    $default  reduce using rule 58 (multiplicative_expression)


State 76

   24 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 114


State 77

   25 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 115
    statement   go to state 51
    var         go to state 52


State 78

   65 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 116
    multiplicative_expression  go to state 74
    term                       go to state 75


State 79

   30 statement: RETURN expressions .

    $default  reduce using rule 30 (statement)


State 80

   50 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   51    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 117
    multiplicative_expression  go to state 74
    term                       go to state 75


State 81

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 82

   18 statements: statement SEMICOLON .
   19           | statement SEMICOLON . statements

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    ENDLOOP   reduce using rule 18 (statements)
    END_BODY  reduce using rule 18 (statements)
    ENDIF     reduce using rule 18 (statements)
    ELSE      reduce using rule 18 (statements)

    statements  go to state 118
    statement   go to state 51
    var         go to state 52


State 83

   21 statement: var ASSIGN . expressions

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 119
    multiplicative_expression  go to state 74
    term                       go to state 75


State 84

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 120


State 85

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 86

   20 statements: error SEMICOLON statements .

    $default  reduce using rule 20 (statements)


State 87

   53 vars: var COMMA . vars

    IDENT  shift, and go to state 49

    var   go to state 56
    vars  go to state 121


State 88

   26 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 122


State 89

   68 term: MINUS L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 123
    multiplicative_expression  go to state 74
    term                       go to state 75


State 90

   67 term: MINUS NUMBER .

    $default  reduce using rule 67 (term)


State 91

   66 term: MINUS var .

    $default  reduce using rule 66 (term)


State 92

   42 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 124


State 93

   39 relation_expression: expressions . comp expressions
   65 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 125
    EQ       shift, and go to state 102
    NEQ      shift, and go to state 103
    LT       shift, and go to state 104
    GT       shift, and go to state 105
    GTE      shift, and go to state 106
    LTE      shift, and go to state 107

    comp  go to state 108


State 94

   38 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   65 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    bool_expression            go to state 126
    relation_and_expression    go to state 69
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 93
    multiplicative_expression  go to state 74
    term                       go to state 75


State 95

   36 relation_expression: NOT TRUE .

    $default  reduce using rule 36 (relation_expression)


State 96

   37 relation_expression: NOT FALSE .

    $default  reduce using rule 37 (relation_expression)


State 97

   35 relation_expression: NOT expressions . comp expressions

    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    LT   shift, and go to state 104
    GT   shift, and go to state 105
    GTE  shift, and go to state 106
    LTE  shift, and go to state 107

    comp  go to state 127


State 98

   62 term: ident L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 128
    multiplicative_expression  go to state 74
    term                       go to state 75


State 99

   22 statement: IF bool_expression THEN . statements ENDIF
   23          | IF bool_expression THEN . statements ELSE statements ENDIF

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 129
    statement   go to state 51
    var         go to state 52


State 100

   32 bool_expression: relation_and_expression OR . relation_and_expression

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    relation_and_expression    go to state 130
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 73
    multiplicative_expression  go to state 74
    term                       go to state 75


State 101

   34 relation_and_expression: relation_expression AND . relation_expression

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    relation_expression        go to state 131
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 73
    multiplicative_expression  go to state 74
    term                       go to state 75


State 102

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 103

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 104

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 105

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 106

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 107

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 108

   39 relation_expression: expressions comp . expressions

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 132
    multiplicative_expression  go to state 74
    term                       go to state 75


State 109

   55 expression: multiplicative_expression PLUS . multiplicative_expression

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    multiplicative_expression  go to state 133
    term                       go to state 75


State 110

   56 expression: multiplicative_expression MINUS . multiplicative_expression

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    multiplicative_expression  go to state 134
    term                       go to state 75


State 111

   59 multiplicative_expression: term MULT . term

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident  go to state 67
    var    go to state 71
    term   go to state 135


State 112

   60 multiplicative_expression: term DIV . term

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident  go to state 67
    var    go to state 71
    term   go to state 136


State 113

   61 multiplicative_expression: term PER . term

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident  go to state 67
    var    go to state 71
    term   go to state 137


State 114

   24 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 138
    statement   go to state 51
    var         go to state 52


State 115

   25 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 139


State 116

   65 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 125


State 117

   50 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   51    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 140


State 118

   19 statements: statement SEMICOLON statements .

    $default  reduce using rule 19 (statements)


State 119

   21 statement: var ASSIGN expressions .

    $default  reduce using rule 21 (statement)


State 120

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 141


State 121

   53 vars: var COMMA vars .

    $default  reduce using rule 53 (vars)


State 122

   26 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 142


State 123

   68 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 143


State 124

   42 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 42 (relation_expression)


State 125

   65 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 65 (term)


State 126

   38 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 144


State 127

   35 relation_expression: NOT expressions comp . expressions

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 145
    multiplicative_expression  go to state 74
    term                       go to state 75


State 128

   62 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 146


State 129

   22 statement: IF bool_expression THEN statements . ENDIF
   23          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 147
    ELSE   shift, and go to state 148


State 130

   32 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 32 (bool_expression)


State 131

   34 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 34 (relation_and_expression)


State 132

   39 relation_expression: expressions comp expressions .

    $default  reduce using rule 39 (relation_expression)


State 133

   55 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 55 (expression)


State 134

   56 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 56 (expression)


State 135

   59 multiplicative_expression: term MULT term .

    $default  reduce using rule 59 (multiplicative_expression)


State 136

   60 multiplicative_expression: term DIV term .

    $default  reduce using rule 60 (multiplicative_expression)


State 137

   61 multiplicative_expression: term PER term .

    $default  reduce using rule 61 (multiplicative_expression)


State 138

   24 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 139

   25 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 150


State 140

   50 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   51    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 151

    $default  reduce using rule 50 (var)


State 141

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 152


State 142

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    bool_expression            go to state 153
    relation_and_expression    go to state 69
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 73
    multiplicative_expression  go to state 74
    term                       go to state 75


State 143

   68 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 68 (term)


State 144

   38 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 38 (relation_expression)


State 145

   35 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 35 (relation_expression)


State 146

   62 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 62 (term)


State 147

   22 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 22 (statement)


State 148

   23 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 154
    statement   go to state 51
    var         go to state 52


State 149

   24 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 24 (statement)


State 150

   25 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    bool_expression            go to state 155
    relation_and_expression    go to state 69
    relation_expression        go to state 70
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 73
    multiplicative_expression  go to state 74
    term                       go to state 75


State 151

   51 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 156
    multiplicative_expression  go to state 74
    term                       go to state 75


State 152

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 153

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 157


State 154

   23 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 158


State 155

   25 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 25 (statement)


State 156

   51 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 159


State 157

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 49

    var   go to state 56
    vars  go to state 160


State 158

   23 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 23 (statement)


State 159

   51 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 51 (var)


State 160

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 161


State 161

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 60
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 65
    NUMBER   shift, and go to state 66

    ident                      go to state 67
    var                        go to state 71
    expression                 go to state 72
    expressions                go to state 162
    multiplicative_expression  go to state 74
    term                       go to state 75


State 162

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 163


State 163

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 164
    statement   go to state 51
    var         go to state 52


State 164

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 165


State 165

   26 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 26 (statement)
