Terminals unused in grammar

   EQUAL
   END
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error SEMICOLON declarations
    8             | declaration error declarations
    9             | declaration SEMICOLON error

   10 declaration: ident COLON INTEGER
   11            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | error COLON INTEGER
   14            | ident error INTEGER
   15            | ident COLON error

   16 ident: IDENT
   17      | IDENT COMMA ident

   18 statements: statement SEMICOLON
   19           | statement SEMICOLON statements
   20           | statement SEMICOLON error
   21           | error SEMICOLON statements
   22           | statement error statements

   23 statement: var ASSIGN expressions
   24          | IF bool_expression THEN statements ENDIF
   25          | IF bool_expression THEN statements ELSE statements ENDIF
   26          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   27          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   28          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   29          | READ vars
   30          | READ error
   31          | WRITE vars
   32          | WRITE error
   33          | CONTINUE
   34          | RETURN expressions

   35 bool_expression: relation_and_expression
   36                | relation_and_expression OR relation_and_expression

   37 relation_and_expression: relation_expression
   38                        | relation_expression AND relation_expression

   39 relation_expression: NOT expressions comp expressions
   40                    | NOT TRUE
   41                    | NOT FALSE
   42                    | NOT L_PAREN bool_expression R_PAREN
   43                    | expressions comp expressions
   44                    | TRUE
   45                    | FALSE
   46                    | L_PAREN bool_expression R_PAREN

   47 comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | GTE
   52     | LTE

   53 var: IDENT
   54    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   55    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   56 vars: var
   57     | var COMMA vars
   58     | error COMMA vars
   59     | var COMMA error

   60 expression: multiplicative_expression
   61           | multiplicative_expression PLUS multiplicative_expression
   62           | multiplicative_expression MINUS multiplicative_expression

   63 expressions: expression

   64 multiplicative_expression: term
   65                          | term MULT term
   66                          | term DIV term
   67                          | term PER term

   68 term: ident L_PAREN expressions R_PAREN
   69     | var
   70     | NUMBER
   71     | L_PAREN expressions R_PAREN
   72     | MINUS var
   73     | MINUS NUMBER
   74     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256) 7 8 9 13 14 15 20 21 22 30 32 58 59
FUNCTION (258) 4
SEMICOLON (259) 4 6 7 9 18 19 20 21 28
COMMA (260) 17 57 58 59
COLON (261) 10 11 12 13 15
READ (262) 29 30
WRITE (263) 31 32
MULT (264) 65
DIV (265) 66
PLUS (266) 61
MINUS (267) 62 72 73 74
EQUAL (268)
PER (269) 67
END (270)
FOR (271) 28
CONTINUE (272) 33
L_SQUARE_BRACKET (273) 11 12 54 55
R_SQUARE_BRACKET (274) 11 12 54 55
L_PAREN (275) 42 46 68 71 74
R_PAREN (276) 42 46 68 71 74
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 26 27 28
ENDLOOP (280) 26 27 28
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 10 11 12 13 14
ARRAY (286) 11 12
OF (287) 11 12
ENDIF (288) 24 25
ELSE (289) 25
IF (290) 24 25
THEN (291) 24 25
WHILE (292) 26 27
DO (293) 27
EQ (294) 47
NEQ (295) 48
LT (296) 49
GT (297) 50
GTE (298) 51
LTE (299) 52
AND (300) 38
OR (301) 36
NOT (302) 39 40 41 42
TRUE (303) 40 44
FALSE (304) 41 45
RETURN (305) 34
ASSIGN (306) 23 28
IDENT (307) 4 16 17 53 54 55
NUMBER (308) 11 12 28 70 73
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6 7 8 9, on right: 4 6 7 8
declaration (60)
    on left: 10 11 12 13 14 15, on right: 6 8 9
ident (61)
    on left: 16 17, on right: 10 11 12 14 15 17 68
statements (62)
    on left: 18 19 20 21 22, on right: 4 19 21 22 24 25 26 27 28
statement (63)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34, on right: 18 19 20
    22
bool_expression (64)
    on left: 35 36, on right: 24 25 26 27 28 42 46
relation_and_expression (65)
    on left: 37 38, on right: 35 36
relation_expression (66)
    on left: 39 40 41 42 43 44 45 46, on right: 37 38
comp (67)
    on left: 47 48 49 50 51 52, on right: 39 43
var (68)
    on left: 53 54 55, on right: 23 56 57 59 69 72
vars (69)
    on left: 56 57 58 59, on right: 28 29 31 57 58
expression (70)
    on left: 60 61 62, on right: 54 55 63
expressions (71)
    on left: 63, on right: 23 28 34 39 43 68 71 74
multiplicative_expression (72)
    on left: 64 65 66 67, on right: 60 61 62
term (73)
    on left: 68 69 70 71 72 73 74, on right: 64 65 66 67


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    ident         go to state 14


State 10

    7 declarations: error . SEMICOLON declarations
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16


State 11

   16 ident: IDENT .
   17      | IDENT . COMMA ident

    COMMA  shift, and go to state 17

    $default  reduce using rule 16 (ident)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 13

    6 declarations: declaration . SEMICOLON declarations
    8             | declaration . error declarations
    9             | declaration . SEMICOLON error

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 14

   10 declaration: ident . COLON INTEGER
   11            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | ident . error INTEGER
   15            | ident . COLON error

    error  shift, and go to state 21
    COLON  shift, and go to state 22


State 15

    7 declarations: error SEMICOLON . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 13
    ident         go to state 14


State 16

   13 declaration: error COLON . INTEGER

    INTEGER  shift, and go to state 24


State 17

   17 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 11

    ident  go to state 25


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 19

    8 declarations: declaration error . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 27
    declaration   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON . declarations
    9             | declaration SEMICOLON . error

    error  shift, and go to state 28
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 29
    declaration   go to state 13
    ident         go to state 14


State 21

   14 declaration: ident error . INTEGER

    INTEGER  shift, and go to state 30


State 22

   10 declaration: ident COLON . INTEGER
   11            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | ident COLON . error

    error    shift, and go to state 31
    INTEGER  shift, and go to state 32
    ARRAY    shift, and go to state 33


State 23

    7 declarations: error SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 24

   13 declaration: error COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 25

   17 ident: IDENT COMMA ident .

    $default  reduce using rule 17 (ident)


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 34
    declaration   go to state 13
    ident         go to state 14


State 27

    8 declarations: declaration error declarations .

    $default  reduce using rule 8 (declarations)


State 28

    7 declarations: error . SEMICOLON declarations
    9             | declaration SEMICOLON error .
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16

    $default  reduce using rule 9 (declarations)


State 29

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 30

   14 declaration: ident error INTEGER .

    $default  reduce using rule 14 (declaration)


State 31

   15 declaration: ident COLON error .

    $default  reduce using rule 15 (declaration)


State 32

   10 declaration: ident COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 33

   11 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 35


State 34

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 36


State 35

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 37


State 36

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 38


State 37

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 50
    statement   go to state 51
    var         go to state 52


State 39

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 53
    OF                shift, and go to state 54


State 40

   21 statements: error . SEMICOLON statements

    SEMICOLON  shift, and go to state 55


State 41

   29 statement: READ . vars
   30          | READ . error

    error  shift, and go to state 56
    IDENT  shift, and go to state 49

    var   go to state 57
    vars  go to state 58


State 42

   31 statement: WRITE . vars
   32          | WRITE . error

    error  shift, and go to state 59
    IDENT  shift, and go to state 49

    var   go to state 57
    vars  go to state 60


State 43

   28 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error  shift, and go to state 61
    IDENT  shift, and go to state 49

    var   go to state 57
    vars  go to state 62


State 44

   33 statement: CONTINUE .

    $default  reduce using rule 33 (statement)


State 45

   24 statement: IF . bool_expression THEN statements ENDIF
   25          | IF . bool_expression THEN statements ELSE statements ENDIF

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    bool_expression            go to state 71
    relation_and_expression    go to state 72
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 76
    multiplicative_expression  go to state 77
    term                       go to state 78


State 46

   26 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    bool_expression            go to state 79
    relation_and_expression    go to state 72
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 76
    multiplicative_expression  go to state 77
    term                       go to state 78


State 47

   27 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 80


State 48

   34 statement: RETURN . expressions

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 82
    multiplicative_expression  go to state 77
    term                       go to state 78


State 49

   53 var: IDENT .
   54    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   55    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 83

    $default  reduce using rule 53 (var)


State 50

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 84


State 51

   18 statements: statement . SEMICOLON
   19           | statement . SEMICOLON statements
   20           | statement . SEMICOLON error
   22           | statement . error statements

    error      shift, and go to state 85
    SEMICOLON  shift, and go to state 86


State 52

   23 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 87


State 53

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 88


State 54

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 89


State 55

   21 statements: error SEMICOLON . statements

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 90
    statement   go to state 51
    var         go to state 52


State 56

   30 statement: READ error .
   58 vars: error . COMMA vars

    COMMA  shift, and go to state 91

    $default  reduce using rule 30 (statement)


State 57

   56 vars: var .
   57     | var . COMMA vars
   59     | var . COMMA error

    COMMA  shift, and go to state 92

    $default  reduce using rule 56 (vars)


State 58

   29 statement: READ vars .

    $default  reduce using rule 29 (statement)


State 59

   32 statement: WRITE error .
   58 vars: error . COMMA vars

    COMMA  shift, and go to state 91

    $default  reduce using rule 32 (statement)


State 60

   31 statement: WRITE vars .

    $default  reduce using rule 31 (statement)


State 61

   58 vars: error . COMMA vars

    COMMA  shift, and go to state 91


State 62

   28 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 93


State 63

   72 term: MINUS . var
   73     | MINUS . NUMBER
   74     | MINUS . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 94
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 95

    var  go to state 96


State 64

   46 relation_expression: L_PAREN . bool_expression R_PAREN
   71 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    bool_expression            go to state 97
    relation_and_expression    go to state 72
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 98
    multiplicative_expression  go to state 77
    term                       go to state 78


State 65

   39 relation_expression: NOT . expressions comp expressions
   40                    | NOT . TRUE
   41                    | NOT . FALSE
   42                    | NOT . L_PAREN bool_expression R_PAREN

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 99
    TRUE     shift, and go to state 100
    FALSE    shift, and go to state 101
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 102
    multiplicative_expression  go to state 77
    term                       go to state 78


State 66

   44 relation_expression: TRUE .

    $default  reduce using rule 44 (relation_expression)


State 67

   45 relation_expression: FALSE .

    $default  reduce using rule 45 (relation_expression)


State 68

   16 ident: IDENT .
   17      | IDENT . COMMA ident
   53 var: IDENT .
   54    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   55    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    COMMA             shift, and go to state 17
    L_SQUARE_BRACKET  shift, and go to state 83

    L_PAREN   reduce using rule 16 (ident)
    $default  reduce using rule 53 (var)


State 69

   70 term: NUMBER .

    $default  reduce using rule 70 (term)


State 70

   68 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 103


State 71

   24 statement: IF bool_expression . THEN statements ENDIF
   25          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 104


State 72

   35 bool_expression: relation_and_expression .
   36                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 105

    $default  reduce using rule 35 (bool_expression)


State 73

   37 relation_and_expression: relation_expression .
   38                        | relation_expression . AND relation_expression

    AND  shift, and go to state 106

    $default  reduce using rule 37 (relation_and_expression)


State 74

   69 term: var .

    $default  reduce using rule 69 (term)


State 75

   63 expressions: expression .

    $default  reduce using rule 63 (expressions)


State 76

   43 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 107
    NEQ  shift, and go to state 108
    LT   shift, and go to state 109
    GT   shift, and go to state 110
    GTE  shift, and go to state 111
    LTE  shift, and go to state 112

    comp  go to state 113


State 77

   60 expression: multiplicative_expression .
   61           | multiplicative_expression . PLUS multiplicative_expression
   62           | multiplicative_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 60 (expression)


State 78

   64 multiplicative_expression: term .
   65                          | term . MULT term
   66                          | term . DIV term
   67                          | term . PER term

    MULT  shift, and go to state 116
    DIV   shift, and go to state 117
    PER   shift, and go to state 118

    $default  reduce using rule 64 (multiplicative_expression)


State 79

   26 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 119


State 80

   27 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 120
    statement   go to state 51
    var         go to state 52


State 81

   71 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 121
    multiplicative_expression  go to state 77
    term                       go to state 78


State 82

   34 statement: RETURN expressions .

    $default  reduce using rule 34 (statement)


State 83

   54 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   55    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 122
    multiplicative_expression  go to state 77
    term                       go to state 78


State 84

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 85

   22 statements: statement error . statements

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 123
    statement   go to state 51
    var         go to state 52


State 86

   18 statements: statement SEMICOLON .
   19           | statement SEMICOLON . statements
   20           | statement SEMICOLON . error

    error     shift, and go to state 124
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    ENDLOOP   reduce using rule 18 (statements)
    END_BODY  reduce using rule 18 (statements)
    ENDIF     reduce using rule 18 (statements)
    ELSE      reduce using rule 18 (statements)

    statements  go to state 125
    statement   go to state 51
    var         go to state 52


State 87

   23 statement: var ASSIGN . expressions

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 126
    multiplicative_expression  go to state 77
    term                       go to state 78


State 88

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 127


State 89

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 90

   21 statements: error SEMICOLON statements .

    $default  reduce using rule 21 (statements)


State 91

   58 vars: error COMMA . vars

    error  shift, and go to state 61
    IDENT  shift, and go to state 49

    var   go to state 57
    vars  go to state 128


State 92

   57 vars: var COMMA . vars
   59     | var COMMA . error

    error  shift, and go to state 129
    IDENT  shift, and go to state 49

    var   go to state 57
    vars  go to state 130


State 93

   28 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 131


State 94

   74 term: MINUS L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 132
    multiplicative_expression  go to state 77
    term                       go to state 78


State 95

   73 term: MINUS NUMBER .

    $default  reduce using rule 73 (term)


State 96

   72 term: MINUS var .

    $default  reduce using rule 72 (term)


State 97

   46 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 133


State 98

   43 relation_expression: expressions . comp expressions
   71 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 134
    EQ       shift, and go to state 107
    NEQ      shift, and go to state 108
    LT       shift, and go to state 109
    GT       shift, and go to state 110
    GTE      shift, and go to state 111
    LTE      shift, and go to state 112

    comp  go to state 113


State 99

   42 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   71 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    bool_expression            go to state 135
    relation_and_expression    go to state 72
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 98
    multiplicative_expression  go to state 77
    term                       go to state 78


State 100

   40 relation_expression: NOT TRUE .

    $default  reduce using rule 40 (relation_expression)


State 101

   41 relation_expression: NOT FALSE .

    $default  reduce using rule 41 (relation_expression)


State 102

   39 relation_expression: NOT expressions . comp expressions

    EQ   shift, and go to state 107
    NEQ  shift, and go to state 108
    LT   shift, and go to state 109
    GT   shift, and go to state 110
    GTE  shift, and go to state 111
    LTE  shift, and go to state 112

    comp  go to state 136


State 103

   68 term: ident L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 137
    multiplicative_expression  go to state 77
    term                       go to state 78


State 104

   24 statement: IF bool_expression THEN . statements ENDIF
   25          | IF bool_expression THEN . statements ELSE statements ENDIF

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 138
    statement   go to state 51
    var         go to state 52


State 105

   36 bool_expression: relation_and_expression OR . relation_and_expression

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    relation_and_expression    go to state 139
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 76
    multiplicative_expression  go to state 77
    term                       go to state 78


State 106

   38 relation_and_expression: relation_expression AND . relation_expression

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    relation_expression        go to state 140
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 76
    multiplicative_expression  go to state 77
    term                       go to state 78


State 107

   47 comp: EQ .

    $default  reduce using rule 47 (comp)


State 108

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 109

   49 comp: LT .

    $default  reduce using rule 49 (comp)


State 110

   50 comp: GT .

    $default  reduce using rule 50 (comp)


State 111

   51 comp: GTE .

    $default  reduce using rule 51 (comp)


State 112

   52 comp: LTE .

    $default  reduce using rule 52 (comp)


State 113

   43 relation_expression: expressions comp . expressions

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 141
    multiplicative_expression  go to state 77
    term                       go to state 78


State 114

   61 expression: multiplicative_expression PLUS . multiplicative_expression

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    multiplicative_expression  go to state 142
    term                       go to state 78


State 115

   62 expression: multiplicative_expression MINUS . multiplicative_expression

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    multiplicative_expression  go to state 143
    term                       go to state 78


State 116

   65 multiplicative_expression: term MULT . term

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident  go to state 70
    var    go to state 74
    term   go to state 144


State 117

   66 multiplicative_expression: term DIV . term

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident  go to state 70
    var    go to state 74
    term   go to state 145


State 118

   67 multiplicative_expression: term PER . term

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident  go to state 70
    var    go to state 74
    term   go to state 146


State 119

   26 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 147
    statement   go to state 51
    var         go to state 52


State 120

   27 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 148


State 121

   71 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 134


State 122

   54 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   55    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 149


State 123

   22 statements: statement error statements .

    $default  reduce using rule 22 (statements)


State 124

   20 statements: statement SEMICOLON error .
   21           | error . SEMICOLON statements

    SEMICOLON  shift, and go to state 55

    $default  reduce using rule 20 (statements)


State 125

   19 statements: statement SEMICOLON statements .

    $default  reduce using rule 19 (statements)


State 126

   23 statement: var ASSIGN expressions .

    $default  reduce using rule 23 (statement)


State 127

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 150


State 128

   58 vars: error COMMA vars .

    $default  reduce using rule 58 (vars)


State 129

   58 vars: error . COMMA vars
   59     | var COMMA error .

    COMMA  shift, and go to state 91

    $default  reduce using rule 59 (vars)


State 130

   57 vars: var COMMA vars .

    $default  reduce using rule 57 (vars)


State 131

   28 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 151


State 132

   74 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 152


State 133

   46 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 46 (relation_expression)


State 134

   71 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 71 (term)


State 135

   42 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 153


State 136

   39 relation_expression: NOT expressions comp . expressions

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 154
    multiplicative_expression  go to state 77
    term                       go to state 78


State 137

   68 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 155


State 138

   24 statement: IF bool_expression THEN statements . ENDIF
   25          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 156
    ELSE   shift, and go to state 157


State 139

   36 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 36 (bool_expression)


State 140

   38 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 38 (relation_and_expression)


State 141

   43 relation_expression: expressions comp expressions .

    $default  reduce using rule 43 (relation_expression)


State 142

   61 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 61 (expression)


State 143

   62 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 62 (expression)


State 144

   65 multiplicative_expression: term MULT term .

    $default  reduce using rule 65 (multiplicative_expression)


State 145

   66 multiplicative_expression: term DIV term .

    $default  reduce using rule 66 (multiplicative_expression)


State 146

   67 multiplicative_expression: term PER term .

    $default  reduce using rule 67 (multiplicative_expression)


State 147

   26 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 158


State 148

   27 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 159


State 149

   54 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   55    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 160

    $default  reduce using rule 54 (var)


State 150

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 161


State 151

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    bool_expression            go to state 162
    relation_and_expression    go to state 72
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 76
    multiplicative_expression  go to state 77
    term                       go to state 78


State 152

   74 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 74 (term)


State 153

   42 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 42 (relation_expression)


State 154

   39 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 39 (relation_expression)


State 155

   68 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 68 (term)


State 156

   24 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 24 (statement)


State 157

   25 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 163
    statement   go to state 51
    var         go to state 52


State 158

   26 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 26 (statement)


State 159

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 64
    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    bool_expression            go to state 164
    relation_and_expression    go to state 72
    relation_expression        go to state 73
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 76
    multiplicative_expression  go to state 77
    term                       go to state 78


State 160

   55 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 165
    multiplicative_expression  go to state 77
    term                       go to state 78


State 161

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 162

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 166


State 163

   25 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 167


State 164

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 27 (statement)


State 165

   55 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 168


State 166

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error  shift, and go to state 61
    IDENT  shift, and go to state 49

    var   go to state 57
    vars  go to state 169


State 167

   25 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 25 (statement)


State 168

   55 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 55 (var)


State 169

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 170


State 170

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 63
    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    ident                      go to state 70
    var                        go to state 74
    expression                 go to state 75
    expressions                go to state 171
    multiplicative_expression  go to state 77
    term                       go to state 78


State 171

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 172


State 172

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    FOR       shift, and go to state 43
    CONTINUE  shift, and go to state 44
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 49

    statements  go to state 173
    statement   go to state 51
    var         go to state 52


State 173

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 174


State 174

   28 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 28 (statement)
