Terminals unused in grammar

   EQUAL
   END
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error SEMICOLON declarations
    8             | declaration error declarations
    9             | declaration SEMICOLON error

   10 declaration: ident COLON INTEGER
   11            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | error COLON INTEGER
   14            | ident error INTEGER
   15            | ident COLON error

   16 ident: IDENT
   17      | IDENT COMMA ident

   18 statements: statement SEMICOLON
   19           | statement SEMICOLON statements

   20 statement: var ASSIGN expressions
   21          | IF bool_expression THEN statements ENDIF
   22          | IF bool_expression THEN statements ELSE statements ENDIF
   23          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   24          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   25          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   26          | READ vars
   27          | WRITE vars
   28          | CONTINUE
   29          | RETURN expressions

   30 bool_expression: relation_and_expression
   31                | relation_and_expression OR relation_and_expression

   32 relation_and_expression: relation_expression
   33                        | relation_expression AND relation_expression

   34 relation_expression: NOT expressions comp expressions
   35                    | NOT TRUE
   36                    | NOT FALSE
   37                    | NOT L_PAREN bool_expression R_PAREN
   38                    | expressions comp expressions
   39                    | TRUE
   40                    | FALSE
   41                    | L_PAREN bool_expression R_PAREN
   42                    | NOT expressions error expressions

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | GTE
   48     | LTE

   49 var: IDENT
   50    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   52 vars: var
   53     | var COMMA vars

   54 expression: multiplicative_expression
   55           | multiplicative_expression PLUS multiplicative_expression
   56           | multiplicative_expression MINUS multiplicative_expression

   57 expressions: expression

   58 multiplicative_expression: term
   59                          | term MULT term
   60                          | term DIV term
   61                          | term PER term
   62                          | error MULT term
   63                          | term MULT error
   64                          | error DIV term
   65                          | term DIV error
   66                          | error PER term
   67                          | term PER error

   68 term: ident L_PAREN expressions R_PAREN
   69     | var
   70     | NUMBER
   71     | L_PAREN expressions R_PAREN
   72     | MINUS var
   73     | MINUS NUMBER
   74     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256) 7 8 9 13 14 15 42 62 63 64 65 66 67
FUNCTION (258) 4
SEMICOLON (259) 4 6 7 9 18 19 25
COMMA (260) 17 53
COLON (261) 10 11 12 13 15
READ (262) 26
WRITE (263) 27
MULT (264) 59 62 63
DIV (265) 60 64 65
PLUS (266) 55
MINUS (267) 56 72 73 74
EQUAL (268)
PER (269) 61 66 67
END (270)
FOR (271) 25
CONTINUE (272) 28
L_SQUARE_BRACKET (273) 11 12 50 51
R_SQUARE_BRACKET (274) 11 12 50 51
L_PAREN (275) 37 41 68 71 74
R_PAREN (276) 37 41 68 71 74
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 23 24 25
ENDLOOP (280) 23 24 25
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 10 11 12 13 14
ARRAY (286) 11 12
OF (287) 11 12
ENDIF (288) 21 22
ELSE (289) 22
IF (290) 21 22
THEN (291) 21 22
WHILE (292) 23 24
DO (293) 24
EQ (294) 43
NEQ (295) 44
LT (296) 45
GT (297) 46
GTE (298) 47
LTE (299) 48
AND (300) 33
OR (301) 31
NOT (302) 34 35 36 37 42
TRUE (303) 35 39
FALSE (304) 36 40
RETURN (305) 29
ASSIGN (306) 20 25
IDENT (307) 4 16 17 49 50 51
NUMBER (308) 11 12 25 70 73
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6 7 8 9, on right: 4 6 7 8
declaration (60)
    on left: 10 11 12 13 14 15, on right: 6 8 9
ident (61)
    on left: 16 17, on right: 10 11 12 14 15 17 68
statements (62)
    on left: 18 19, on right: 4 19 21 22 23 24 25
statement (63)
    on left: 20 21 22 23 24 25 26 27 28 29, on right: 18 19
bool_expression (64)
    on left: 30 31, on right: 21 22 23 24 25 37 41
relation_and_expression (65)
    on left: 32 33, on right: 30 31
relation_expression (66)
    on left: 34 35 36 37 38 39 40 41 42, on right: 32 33
comp (67)
    on left: 43 44 45 46 47 48, on right: 34 38
var (68)
    on left: 49 50 51, on right: 20 52 53 69 72
vars (69)
    on left: 52 53, on right: 25 26 27 53
expression (70)
    on left: 54 55 56, on right: 50 51 57
expressions (71)
    on left: 57, on right: 20 25 29 34 38 42 68 71 74
multiplicative_expression (72)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 54 55 56
term (73)
    on left: 68 69 70 71 72 73 74, on right: 58 59 60 61 62 63 64 65
    66 67


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    ident         go to state 14


State 10

    7 declarations: error . SEMICOLON declarations
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16


State 11

   16 ident: IDENT .
   17      | IDENT . COMMA ident

    COMMA  shift, and go to state 17

    $default  reduce using rule 16 (ident)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 13

    6 declarations: declaration . SEMICOLON declarations
    8             | declaration . error declarations
    9             | declaration . SEMICOLON error

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 14

   10 declaration: ident . COLON INTEGER
   11            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | ident . error INTEGER
   15            | ident . COLON error

    error  shift, and go to state 21
    COLON  shift, and go to state 22


State 15

    7 declarations: error SEMICOLON . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 13
    ident         go to state 14


State 16

   13 declaration: error COLON . INTEGER

    INTEGER  shift, and go to state 24


State 17

   17 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 11

    ident  go to state 25


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 19

    8 declarations: declaration error . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 27
    declaration   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON . declarations
    9             | declaration SEMICOLON . error

    error  shift, and go to state 28
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 29
    declaration   go to state 13
    ident         go to state 14


State 21

   14 declaration: ident error . INTEGER

    INTEGER  shift, and go to state 30


State 22

   10 declaration: ident COLON . INTEGER
   11            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | ident COLON . error

    error    shift, and go to state 31
    INTEGER  shift, and go to state 32
    ARRAY    shift, and go to state 33


State 23

    7 declarations: error SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 24

   13 declaration: error COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 25

   17 ident: IDENT COMMA ident .

    $default  reduce using rule 17 (ident)


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 34
    declaration   go to state 13
    ident         go to state 14


State 27

    8 declarations: declaration error declarations .

    $default  reduce using rule 8 (declarations)


State 28

    7 declarations: error . SEMICOLON declarations
    9             | declaration SEMICOLON error .
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16

    $default  reduce using rule 9 (declarations)


State 29

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 30

   14 declaration: ident error INTEGER .

    $default  reduce using rule 14 (declaration)


State 31

   15 declaration: ident COLON error .

    $default  reduce using rule 15 (declaration)


State 32

   10 declaration: ident COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 33

   11 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 35


State 34

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 36


State 35

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 37


State 36

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 38


State 37

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    statements  go to state 49
    statement   go to state 50
    var         go to state 51


State 39

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 52
    OF                shift, and go to state 53


State 40

   26 statement: READ . vars

    IDENT  shift, and go to state 48

    var   go to state 54
    vars  go to state 55


State 41

   27 statement: WRITE . vars

    IDENT  shift, and go to state 48

    var   go to state 54
    vars  go to state 56


State 42

   25 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 48

    var   go to state 54
    vars  go to state 57


State 43

   28 statement: CONTINUE .

    $default  reduce using rule 28 (statement)


State 44

   21 statement: IF . bool_expression THEN statements ENDIF
   22          | IF . bool_expression THEN statements ELSE statements ENDIF

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    bool_expression            go to state 67
    relation_and_expression    go to state 68
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 72
    multiplicative_expression  go to state 73
    term                       go to state 74


State 45

   23 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    bool_expression            go to state 75
    relation_and_expression    go to state 68
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 72
    multiplicative_expression  go to state 73
    term                       go to state 74


State 46

   24 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 76


State 47

   29 statement: RETURN . expressions

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 78
    multiplicative_expression  go to state 73
    term                       go to state 74


State 48

   49 var: IDENT .
   50    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 79

    $default  reduce using rule 49 (var)


State 49

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 80


State 50

   18 statements: statement . SEMICOLON
   19           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 81


State 51

   20 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 82


State 52

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 83


State 53

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 84


State 54

   52 vars: var .
   53     | var . COMMA vars

    COMMA  shift, and go to state 85

    $default  reduce using rule 52 (vars)


State 55

   26 statement: READ vars .

    $default  reduce using rule 26 (statement)


State 56

   27 statement: WRITE vars .

    $default  reduce using rule 27 (statement)


State 57

   25 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 86


State 58

   62 multiplicative_expression: error . MULT term
   64                          | error . DIV term
   66                          | error . PER term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    PER   shift, and go to state 89


State 59

   72 term: MINUS . var
   73     | MINUS . NUMBER
   74     | MINUS . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 90
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 91

    var  go to state 92


State 60

   41 relation_expression: L_PAREN . bool_expression R_PAREN
   71 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    bool_expression            go to state 93
    relation_and_expression    go to state 68
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 94
    multiplicative_expression  go to state 73
    term                       go to state 74


State 61

   34 relation_expression: NOT . expressions comp expressions
   35                    | NOT . TRUE
   36                    | NOT . FALSE
   37                    | NOT . L_PAREN bool_expression R_PAREN
   42                    | NOT . expressions error expressions

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 95
    TRUE     shift, and go to state 96
    FALSE    shift, and go to state 97
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 98
    multiplicative_expression  go to state 73
    term                       go to state 74


State 62

   39 relation_expression: TRUE .

    $default  reduce using rule 39 (relation_expression)


State 63

   40 relation_expression: FALSE .

    $default  reduce using rule 40 (relation_expression)


State 64

   16 ident: IDENT .
   17      | IDENT . COMMA ident
   49 var: IDENT .
   50    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   51    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    COMMA             shift, and go to state 17
    L_SQUARE_BRACKET  shift, and go to state 79

    L_PAREN   reduce using rule 16 (ident)
    $default  reduce using rule 49 (var)


State 65

   70 term: NUMBER .

    $default  reduce using rule 70 (term)


State 66

   68 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 99


State 67

   21 statement: IF bool_expression . THEN statements ENDIF
   22          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 100


State 68

   30 bool_expression: relation_and_expression .
   31                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 101

    $default  reduce using rule 30 (bool_expression)


State 69

   32 relation_and_expression: relation_expression .
   33                        | relation_expression . AND relation_expression

    AND  shift, and go to state 102

    $default  reduce using rule 32 (relation_and_expression)


State 70

   69 term: var .

    $default  reduce using rule 69 (term)


State 71

   57 expressions: expression .

    $default  reduce using rule 57 (expressions)


State 72

   38 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    GTE  shift, and go to state 107
    LTE  shift, and go to state 108

    comp  go to state 109


State 73

   54 expression: multiplicative_expression .
   55           | multiplicative_expression . PLUS multiplicative_expression
   56           | multiplicative_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111

    $default  reduce using rule 54 (expression)


State 74

   58 multiplicative_expression: term .
   59                          | term . MULT term
   60                          | term . DIV term
   61                          | term . PER term
   63                          | term . MULT error
   65                          | term . DIV error
   67                          | term . PER error

    MULT  shift, and go to state 112
    DIV   shift, and go to state 113
    PER   shift, and go to state 114

    $default  reduce using rule 58 (multiplicative_expression)


State 75

   23 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 115


State 76

   24 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    statements  go to state 116
    statement   go to state 50
    var         go to state 51


State 77

   71 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 117
    multiplicative_expression  go to state 73
    term                       go to state 74


State 78

   29 statement: RETURN expressions .

    $default  reduce using rule 29 (statement)


State 79

   50 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   51    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 118
    multiplicative_expression  go to state 73
    term                       go to state 74


State 80

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 81

   18 statements: statement SEMICOLON .
   19           | statement SEMICOLON . statements

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    $default  reduce using rule 18 (statements)

    statements  go to state 119
    statement   go to state 50
    var         go to state 51


State 82

   20 statement: var ASSIGN . expressions

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 120
    multiplicative_expression  go to state 73
    term                       go to state 74


State 83

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 121


State 84

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 85

   53 vars: var COMMA . vars

    IDENT  shift, and go to state 48

    var   go to state 54
    vars  go to state 122


State 86

   25 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 123


State 87

   62 multiplicative_expression: error MULT . term

    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident  go to state 66
    var    go to state 70
    term   go to state 124


State 88

   64 multiplicative_expression: error DIV . term

    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident  go to state 66
    var    go to state 70
    term   go to state 125


State 89

   66 multiplicative_expression: error PER . term

    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident  go to state 66
    var    go to state 70
    term   go to state 126


State 90

   74 term: MINUS L_PAREN . expressions R_PAREN

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 127
    multiplicative_expression  go to state 73
    term                       go to state 74


State 91

   73 term: MINUS NUMBER .

    $default  reduce using rule 73 (term)


State 92

   72 term: MINUS var .

    $default  reduce using rule 72 (term)


State 93

   41 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 94

   38 relation_expression: expressions . comp expressions
   71 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129
    EQ       shift, and go to state 103
    NEQ      shift, and go to state 104
    LT       shift, and go to state 105
    GT       shift, and go to state 106
    GTE      shift, and go to state 107
    LTE      shift, and go to state 108

    comp  go to state 109


State 95

   37 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   71 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    bool_expression            go to state 130
    relation_and_expression    go to state 68
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 94
    multiplicative_expression  go to state 73
    term                       go to state 74


State 96

   35 relation_expression: NOT TRUE .

    $default  reduce using rule 35 (relation_expression)


State 97

   36 relation_expression: NOT FALSE .

    $default  reduce using rule 36 (relation_expression)


State 98

   34 relation_expression: NOT expressions . comp expressions
   42                    | NOT expressions . error expressions

    error  shift, and go to state 131
    EQ     shift, and go to state 103
    NEQ    shift, and go to state 104
    LT     shift, and go to state 105
    GT     shift, and go to state 106
    GTE    shift, and go to state 107
    LTE    shift, and go to state 108

    comp  go to state 132


State 99

   68 term: ident L_PAREN . expressions R_PAREN

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 133
    multiplicative_expression  go to state 73
    term                       go to state 74


State 100

   21 statement: IF bool_expression THEN . statements ENDIF
   22          | IF bool_expression THEN . statements ELSE statements ENDIF

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    statements  go to state 134
    statement   go to state 50
    var         go to state 51


State 101

   31 bool_expression: relation_and_expression OR . relation_and_expression

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    relation_and_expression    go to state 135
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 72
    multiplicative_expression  go to state 73
    term                       go to state 74


State 102

   33 relation_and_expression: relation_expression AND . relation_expression

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    relation_expression        go to state 136
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 72
    multiplicative_expression  go to state 73
    term                       go to state 74


State 103

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 104

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 105

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 106

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 107

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 108

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 109

   38 relation_expression: expressions comp . expressions

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 137
    multiplicative_expression  go to state 73
    term                       go to state 74


State 110

   55 expression: multiplicative_expression PLUS . multiplicative_expression

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    multiplicative_expression  go to state 138
    term                       go to state 74


State 111

   56 expression: multiplicative_expression MINUS . multiplicative_expression

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    multiplicative_expression  go to state 139
    term                       go to state 74


State 112

   59 multiplicative_expression: term MULT . term
   63                          | term MULT . error

    error    shift, and go to state 140
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident  go to state 66
    var    go to state 70
    term   go to state 141


State 113

   60 multiplicative_expression: term DIV . term
   65                          | term DIV . error

    error    shift, and go to state 142
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident  go to state 66
    var    go to state 70
    term   go to state 143


State 114

   61 multiplicative_expression: term PER . term
   67                          | term PER . error

    error    shift, and go to state 144
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident  go to state 66
    var    go to state 70
    term   go to state 145


State 115

   23 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    statements  go to state 146
    statement   go to state 50
    var         go to state 51


State 116

   24 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 147


State 117

   71 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 118

   50 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   51    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 148


State 119

   19 statements: statement SEMICOLON statements .

    $default  reduce using rule 19 (statements)


State 120

   20 statement: var ASSIGN expressions .

    $default  reduce using rule 20 (statement)


State 121

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 149


State 122

   53 vars: var COMMA vars .

    $default  reduce using rule 53 (vars)


State 123

   25 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 150


State 124

   62 multiplicative_expression: error MULT term .

    $default  reduce using rule 62 (multiplicative_expression)


State 125

   64 multiplicative_expression: error DIV term .

    $default  reduce using rule 64 (multiplicative_expression)


State 126

   66 multiplicative_expression: error PER term .

    $default  reduce using rule 66 (multiplicative_expression)


State 127

   74 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 151


State 128

   41 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 41 (relation_expression)


State 129

   71 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 71 (term)


State 130

   37 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 152


State 131

   42 relation_expression: NOT expressions error . expressions

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 153
    multiplicative_expression  go to state 73
    term                       go to state 74


State 132

   34 relation_expression: NOT expressions comp . expressions

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 154
    multiplicative_expression  go to state 73
    term                       go to state 74


State 133

   68 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 155


State 134

   21 statement: IF bool_expression THEN statements . ENDIF
   22          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 156
    ELSE   shift, and go to state 157


State 135

   31 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 31 (bool_expression)


State 136

   33 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 33 (relation_and_expression)


State 137

   38 relation_expression: expressions comp expressions .

    $default  reduce using rule 38 (relation_expression)


State 138

   55 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 55 (expression)


State 139

   56 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 56 (expression)


State 140

   63 multiplicative_expression: term MULT error .

    $default  reduce using rule 63 (multiplicative_expression)


State 141

   59 multiplicative_expression: term MULT term .

    $default  reduce using rule 59 (multiplicative_expression)


State 142

   65 multiplicative_expression: term DIV error .

    $default  reduce using rule 65 (multiplicative_expression)


State 143

   60 multiplicative_expression: term DIV term .

    $default  reduce using rule 60 (multiplicative_expression)


State 144

   67 multiplicative_expression: term PER error .

    $default  reduce using rule 67 (multiplicative_expression)


State 145

   61 multiplicative_expression: term PER term .

    $default  reduce using rule 61 (multiplicative_expression)


State 146

   23 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 158


State 147

   24 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 159


State 148

   50 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   51    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 160

    $default  reduce using rule 50 (var)


State 149

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 161


State 150

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    bool_expression            go to state 162
    relation_and_expression    go to state 68
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 72
    multiplicative_expression  go to state 73
    term                       go to state 74


State 151

   74 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 74 (term)


State 152

   37 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 37 (relation_expression)


State 153

   42 relation_expression: NOT expressions error expressions .

    $default  reduce using rule 42 (relation_expression)


State 154

   34 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 34 (relation_expression)


State 155

   68 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 68 (term)


State 156

   21 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 21 (statement)


State 157

   22 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    statements  go to state 163
    statement   go to state 50
    var         go to state 51


State 158

   23 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 23 (statement)


State 159

   24 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NOT      shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    bool_expression            go to state 164
    relation_and_expression    go to state 68
    relation_expression        go to state 69
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 72
    multiplicative_expression  go to state 73
    term                       go to state 74


State 160

   51 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 165
    multiplicative_expression  go to state 73
    term                       go to state 74


State 161

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 162

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 166


State 163

   22 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 167


State 164

   24 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 24 (statement)


State 165

   51 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 168


State 166

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 48

    var   go to state 54
    vars  go to state 169


State 167

   22 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 22 (statement)


State 168

   51 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 51 (var)


State 169

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 170


State 170

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    error    shift, and go to state 58
    MINUS    shift, and go to state 59
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 64
    NUMBER   shift, and go to state 65

    ident                      go to state 66
    var                        go to state 70
    expression                 go to state 71
    expressions                go to state 171
    multiplicative_expression  go to state 73
    term                       go to state 74


State 171

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 172


State 172

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    FOR       shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 48

    statements  go to state 173
    statement   go to state 50
    var         go to state 51


State 173

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 174


State 174

   25 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 25 (statement)
