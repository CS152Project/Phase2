Terminals unused in grammar

   EQUAL
   END
   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error SEMICOLON declarations
    8             | declaration error declarations
    9             | declaration SEMICOLON error

   10 declaration: ident COLON INTEGER
   11            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | error COLON INTEGER

   14 ident: IDENT
   15      | IDENT COMMA ident

   16 statements: statement SEMICOLON
   17           | statement SEMICOLON statements

   18 statement: var ASSIGN expressions
   19          | IF bool_expression THEN statements ENDIF
   20          | IF bool_expression THEN statements ELSE statements ENDIF
   21          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   23          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   24          | READ vars
   25          | WRITE vars
   26          | CONTINUE
   27          | RETURN expressions

   28 bool_expression: relation_and_expression
   29                | relation_and_expression OR relation_and_expression

   30 relation_and_expression: relation_expression
   31                        | relation_expression AND relation_expression

   32 relation_expression: NOT expressions comp expressions
   33                    | NOT TRUE
   34                    | NOT FALSE
   35                    | NOT L_PAREN bool_expression R_PAREN
   36                    | expressions comp expressions
   37                    | TRUE
   38                    | FALSE
   39                    | L_PAREN bool_expression R_PAREN

   40 comp: EQ
   41     | NEQ
   42     | LT
   43     | GT
   44     | GTE
   45     | LTE

   46 var: IDENT
   47    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   48    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   49 vars: var
   50     | var COMMA vars

   51 expression: multiplicative_expression
   52           | multiplicative_expression PLUS multiplicative_expression
   53           | multiplicative_expression MINUS multiplicative_expression

   54 expressions: expression

   55 multiplicative_expression: term
   56                          | term MULT term
   57                          | term DIV term
   58                          | term PER term

   59 term: ident L_PAREN expressions R_PAREN
   60     | var
   61     | NUMBER
   62     | L_PAREN expressions R_PAREN
   63     | MINUS var
   64     | MINUS NUMBER
   65     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256) 7 8 9 13
FUNCTION (258) 4
SEMICOLON (259) 4 6 7 9 16 17 23
COMMA (260) 15 50
COLON (261) 10 11 12 13
READ (262) 24
WRITE (263) 25
MULT (264) 56
DIV (265) 57
PLUS (266) 52
MINUS (267) 53 63 64 65
EQUAL (268)
PER (269) 58
END (270)
FOR (271) 23
CONTINUE (272) 26
L_SQUARE_BRACKET (273) 11 12 47 48
R_SQUARE_BRACKET (274) 11 12 47 48
L_PAREN (275) 35 39 59 62 65
R_PAREN (276) 35 39 59 62 65
BEGIN_PARAMS (277) 4
END_PARAMS (278) 4
BEGINLOOP (279) 21 22 23
ENDLOOP (280) 21 22 23
BEGIN_LOCALS (281) 4
END_LOCALS (282) 4
BEGIN_BODY (283) 4
END_BODY (284) 4
INTEGER (285) 10 11 12 13
ARRAY (286) 11 12
OF (287) 11 12
ENDIF (288) 19 20
ELSE (289) 20
IF (290) 19 20
THEN (291) 19 20
WHILE (292) 21 22
DO (293) 22
EQ (294) 40
NEQ (295) 41
LT (296) 42
GT (297) 43
GTE (298) 44
LTE (299) 45
AND (300) 31
OR (301) 29
NOT (302) 32 33 34 35
TRUE (303) 33 37
FALSE (304) 34 38
RETURN (305) 27
ASSIGN (306) 18 23
IDENT (307) 4 14 15 46 47 48
NUMBER (308) 11 12 23 61 64
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 3
declarations (59)
    on left: 5 6 7 8 9, on right: 4 6 7 8
declaration (60)
    on left: 10 11 12 13, on right: 6 8 9
ident (61)
    on left: 14 15, on right: 10 11 12 15 59
statements (62)
    on left: 16 17, on right: 4 17 19 20 21 22 23
statement (63)
    on left: 18 19 20 21 22 23 24 25 26 27, on right: 16 17
bool_expression (64)
    on left: 28 29, on right: 19 20 21 22 23 35 39
relation_and_expression (65)
    on left: 30 31, on right: 28 29
relation_expression (66)
    on left: 32 33 34 35 36 37 38 39, on right: 30 31
comp (67)
    on left: 40 41 42 43 44 45, on right: 32 36
var (68)
    on left: 46 47 48, on right: 18 49 50 60 63
vars (69)
    on left: 49 50, on right: 23 24 25 50
expression (70)
    on left: 51 52 53, on right: 47 48 54
expressions (71)
    on left: 54, on right: 18 23 27 32 36 59 62 65
multiplicative_expression (72)
    on left: 55 56 57 58, on right: 51 52 53
term (73)
    on left: 59 60 61 62 63 64 65, on right: 55 56 57 58


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    ident         go to state 14


State 10

    7 declarations: error . SEMICOLON declarations
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16


State 11

   14 ident: IDENT .
   15      | IDENT . COMMA ident

    COMMA  shift, and go to state 17

    $default  reduce using rule 14 (ident)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 13

    6 declarations: declaration . SEMICOLON declarations
    8             | declaration . error declarations
    9             | declaration . SEMICOLON error

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 14

   10 declaration: ident . COLON INTEGER
   11            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 21


State 15

    7 declarations: error SEMICOLON . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 22
    declaration   go to state 13
    ident         go to state 14


State 16

   13 declaration: error COLON . INTEGER

    INTEGER  shift, and go to state 23


State 17

   15 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 11

    ident  go to state 24


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 19

    8 declarations: declaration error . declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 26
    declaration   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON . declarations
    9             | declaration SEMICOLON . error

    error  shift, and go to state 27
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 28
    declaration   go to state 13
    ident         go to state 14


State 21

   10 declaration: ident COLON . INTEGER
   11            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 29
    ARRAY    shift, and go to state 30


State 22

    7 declarations: error SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 23

   13 declaration: error COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 24

   15 ident: IDENT COMMA ident .

    $default  reduce using rule 15 (ident)


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 31
    declaration   go to state 13
    ident         go to state 14


State 26

    8 declarations: declaration error declarations .

    $default  reduce using rule 8 (declarations)


State 27

    7 declarations: error . SEMICOLON declarations
    9             | declaration SEMICOLON error .
   13 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 15
    COLON      shift, and go to state 16

    $default  reduce using rule 9 (declarations)


State 28

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 29

   10 declaration: ident COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 30

   11 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 33


State 32

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 34


State 33

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 35


State 34

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 35

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements  go to state 46
    statement   go to state 47
    var         go to state 48


State 36

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 49
    OF                shift, and go to state 50


State 37

   24 statement: READ . vars

    IDENT  shift, and go to state 45

    var   go to state 51
    vars  go to state 52


State 38

   25 statement: WRITE . vars

    IDENT  shift, and go to state 45

    var   go to state 51
    vars  go to state 53


State 39

   23 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 45

    var   go to state 51
    vars  go to state 54


State 40

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 41

   19 statement: IF . bool_expression THEN statements ENDIF
   20          | IF . bool_expression THEN statements ELSE statements ENDIF

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    bool_expression            go to state 63
    relation_and_expression    go to state 64
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70


State 42

   21 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    bool_expression            go to state 71
    relation_and_expression    go to state 64
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70


State 43

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 72


State 44

   27 statement: RETURN . expressions

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 74
    multiplicative_expression  go to state 69
    term                       go to state 70


State 45

   46 var: IDENT .
   47    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   48    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75

    $default  reduce using rule 46 (var)


State 46

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 76


State 47

   16 statements: statement . SEMICOLON
   17           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 77


State 48

   18 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 78


State 49

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 79


State 50

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 80


State 51

   49 vars: var .
   50     | var . COMMA vars

    COMMA  shift, and go to state 81

    $default  reduce using rule 49 (vars)


State 52

   24 statement: READ vars .

    $default  reduce using rule 24 (statement)


State 53

   25 statement: WRITE vars .

    $default  reduce using rule 25 (statement)


State 54

   23 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 82


State 55

   63 term: MINUS . var
   64     | MINUS . NUMBER
   65     | MINUS . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 84

    var  go to state 85


State 56

   39 relation_expression: L_PAREN . bool_expression R_PAREN
   62 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    bool_expression            go to state 86
    relation_and_expression    go to state 64
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 87
    multiplicative_expression  go to state 69
    term                       go to state 70


State 57

   32 relation_expression: NOT . expressions comp expressions
   33                    | NOT . TRUE
   34                    | NOT . FALSE
   35                    | NOT . L_PAREN bool_expression R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 88
    TRUE     shift, and go to state 89
    FALSE    shift, and go to state 90
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 91
    multiplicative_expression  go to state 69
    term                       go to state 70


State 58

   37 relation_expression: TRUE .

    $default  reduce using rule 37 (relation_expression)


State 59

   38 relation_expression: FALSE .

    $default  reduce using rule 38 (relation_expression)


State 60

   14 ident: IDENT .
   15      | IDENT . COMMA ident
   46 var: IDENT .
   47    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   48    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    COMMA             shift, and go to state 17
    L_SQUARE_BRACKET  shift, and go to state 75

    L_PAREN   reduce using rule 14 (ident)
    $default  reduce using rule 46 (var)


State 61

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 62

   59 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 92


State 63

   19 statement: IF bool_expression . THEN statements ENDIF
   20          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 93


State 64

   28 bool_expression: relation_and_expression .
   29                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 94

    $default  reduce using rule 28 (bool_expression)


State 65

   30 relation_and_expression: relation_expression .
   31                        | relation_expression . AND relation_expression

    AND  shift, and go to state 95

    $default  reduce using rule 30 (relation_and_expression)


State 66

   60 term: var .

    $default  reduce using rule 60 (term)


State 67

   54 expressions: expression .

    $default  reduce using rule 54 (expressions)


State 68

   36 relation_expression: expressions . comp expressions

    EQ   shift, and go to state 96
    NEQ  shift, and go to state 97
    LT   shift, and go to state 98
    GT   shift, and go to state 99
    GTE  shift, and go to state 100
    LTE  shift, and go to state 101

    comp  go to state 102


State 69

   51 expression: multiplicative_expression .
   52           | multiplicative_expression . PLUS multiplicative_expression
   53           | multiplicative_expression . MINUS multiplicative_expression

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104

    $default  reduce using rule 51 (expression)


State 70

   55 multiplicative_expression: term .
   56                          | term . MULT term
   57                          | term . DIV term
   58                          | term . PER term

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    PER   shift, and go to state 107

    $default  reduce using rule 55 (multiplicative_expression)


State 71

   21 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 108


State 72

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements  go to state 109
    statement   go to state 47
    var         go to state 48


State 73

   62 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 110
    multiplicative_expression  go to state 69
    term                       go to state 70


State 74

   27 statement: RETURN expressions .

    $default  reduce using rule 27 (statement)


State 75

   47 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   48    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 111
    multiplicative_expression  go to state 69
    term                       go to state 70


State 76

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 77

   16 statements: statement SEMICOLON .
   17           | statement SEMICOLON . statements

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    $default  reduce using rule 16 (statements)

    statements  go to state 112
    statement   go to state 47
    var         go to state 48


State 78

   18 statement: var ASSIGN . expressions

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 113
    multiplicative_expression  go to state 69
    term                       go to state 70


State 79

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 114


State 80

   11 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 81

   50 vars: var COMMA . vars

    IDENT  shift, and go to state 45

    var   go to state 51
    vars  go to state 115


State 82

   23 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 116


State 83

   65 term: MINUS L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 117
    multiplicative_expression  go to state 69
    term                       go to state 70


State 84

   64 term: MINUS NUMBER .

    $default  reduce using rule 64 (term)


State 85

   63 term: MINUS var .

    $default  reduce using rule 63 (term)


State 86

   39 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 118


State 87

   36 relation_expression: expressions . comp expressions
   62 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 119
    EQ       shift, and go to state 96
    NEQ      shift, and go to state 97
    LT       shift, and go to state 98
    GT       shift, and go to state 99
    GTE      shift, and go to state 100
    LTE      shift, and go to state 101

    comp  go to state 102


State 88

   35 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   62 term: L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    bool_expression            go to state 120
    relation_and_expression    go to state 64
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 87
    multiplicative_expression  go to state 69
    term                       go to state 70


State 89

   33 relation_expression: NOT TRUE .

    $default  reduce using rule 33 (relation_expression)


State 90

   34 relation_expression: NOT FALSE .

    $default  reduce using rule 34 (relation_expression)


State 91

   32 relation_expression: NOT expressions . comp expressions

    EQ   shift, and go to state 96
    NEQ  shift, and go to state 97
    LT   shift, and go to state 98
    GT   shift, and go to state 99
    GTE  shift, and go to state 100
    LTE  shift, and go to state 101

    comp  go to state 121


State 92

   59 term: ident L_PAREN . expressions R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 122
    multiplicative_expression  go to state 69
    term                       go to state 70


State 93

   19 statement: IF bool_expression THEN . statements ENDIF
   20          | IF bool_expression THEN . statements ELSE statements ENDIF

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements  go to state 123
    statement   go to state 47
    var         go to state 48


State 94

   29 bool_expression: relation_and_expression OR . relation_and_expression

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    relation_and_expression    go to state 124
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70


State 95

   31 relation_and_expression: relation_expression AND . relation_expression

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    relation_expression        go to state 125
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70


State 96

   40 comp: EQ .

    $default  reduce using rule 40 (comp)


State 97

   41 comp: NEQ .

    $default  reduce using rule 41 (comp)


State 98

   42 comp: LT .

    $default  reduce using rule 42 (comp)


State 99

   43 comp: GT .

    $default  reduce using rule 43 (comp)


State 100

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 101

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 102

   36 relation_expression: expressions comp . expressions

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 126
    multiplicative_expression  go to state 69
    term                       go to state 70


State 103

   52 expression: multiplicative_expression PLUS . multiplicative_expression

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    multiplicative_expression  go to state 127
    term                       go to state 70


State 104

   53 expression: multiplicative_expression MINUS . multiplicative_expression

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    multiplicative_expression  go to state 128
    term                       go to state 70


State 105

   56 multiplicative_expression: term MULT . term

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident  go to state 62
    var    go to state 66
    term   go to state 129


State 106

   57 multiplicative_expression: term DIV . term

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident  go to state 62
    var    go to state 66
    term   go to state 130


State 107

   58 multiplicative_expression: term PER . term

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident  go to state 62
    var    go to state 66
    term   go to state 131


State 108

   21 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements  go to state 132
    statement   go to state 47
    var         go to state 48


State 109

   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 133


State 110

   62 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 119


State 111

   47 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   48    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 134


State 112

   17 statements: statement SEMICOLON statements .

    $default  reduce using rule 17 (statements)


State 113

   18 statement: var ASSIGN expressions .

    $default  reduce using rule 18 (statement)


State 114

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 135


State 115

   50 vars: var COMMA vars .

    $default  reduce using rule 50 (vars)


State 116

   23 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 136


State 117

   65 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 137


State 118

   39 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 39 (relation_expression)


State 119

   62 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 62 (term)


State 120

   35 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 138


State 121

   32 relation_expression: NOT expressions comp . expressions

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 139
    multiplicative_expression  go to state 69
    term                       go to state 70


State 122

   59 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 140


State 123

   19 statement: IF bool_expression THEN statements . ENDIF
   20          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 141
    ELSE   shift, and go to state 142


State 124

   29 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 29 (bool_expression)


State 125

   31 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 31 (relation_and_expression)


State 126

   36 relation_expression: expressions comp expressions .

    $default  reduce using rule 36 (relation_expression)


State 127

   52 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 52 (expression)


State 128

   53 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 53 (expression)


State 129

   56 multiplicative_expression: term MULT term .

    $default  reduce using rule 56 (multiplicative_expression)


State 130

   57 multiplicative_expression: term DIV term .

    $default  reduce using rule 57 (multiplicative_expression)


State 131

   58 multiplicative_expression: term PER term .

    $default  reduce using rule 58 (multiplicative_expression)


State 132

   21 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 143


State 133

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 144


State 134

   47 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   48    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 145

    $default  reduce using rule 47 (var)


State 135

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 146


State 136

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    bool_expression            go to state 147
    relation_and_expression    go to state 64
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70


State 137

   65 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 65 (term)


State 138

   35 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 35 (relation_expression)


State 139

   32 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 32 (relation_expression)


State 140

   59 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 59 (term)


State 141

   19 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


State 142

   20 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements  go to state 148
    statement   go to state 47
    var         go to state 48


State 143

   21 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 144

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    bool_expression            go to state 149
    relation_and_expression    go to state 64
    relation_expression        go to state 65
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70


State 145

   48 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 150
    multiplicative_expression  go to state 69
    term                       go to state 70


State 146

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 147

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 151


State 148

   20 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 152


State 149

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 22 (statement)


State 150

   48 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 153


State 151

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 45

    var   go to state 51
    vars  go to state 154


State 152

   20 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)


State 153

   48 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 48 (var)


State 154

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 155


State 155

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 60
    NUMBER   shift, and go to state 61

    ident                      go to state 62
    var                        go to state 66
    expression                 go to state 67
    expressions                go to state 156
    multiplicative_expression  go to state 69
    term                       go to state 70


State 156

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 157


State 157

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements  go to state 158
    statement   go to state 47
    var         go to state 48


State 158

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 159


State 159

   23 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 23 (statement)
